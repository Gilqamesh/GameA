#if defined(SINGLE_FILE_BUILD)

#include "raylib_wrapper.cpp"
raylib_wrapper_code
SingleFileRaylibWrapper(void)
{
    raylib_wrapper_code Result = {};

    Result.InitWindow = &RL_InitWindow;
    Result.WindowShouldClose = &RL_WindowShouldClose;
    Result.CloseWindow = &RL_CloseWindow;
    Result.IsWindowReady = &RL_IsWindowReady;
    Result.IsWindowFullscreen = &RL_IsWindowFullscreen;
    Result.IsWindowHidden = &RL_IsWindowHidden;
    Result.IsWindowMinimized = &RL_IsWindowMinimized;
    Result.IsWindowMaximized = &RL_IsWindowMaximized;
    Result.IsWindowFocused = &RL_IsWindowFocused;
    Result.IsWindowResized = &RL_IsWindowResized;
    Result.IsWindowState = &RL_IsWindowState;
    Result.SetWindowState = &RL_SetWindowState;
    Result.ClearWindowState = &RL_ClearWindowState;
    Result.ToggleFullscreen = &RL_ToggleFullscreen;
    Result.MaximizeWindow = &RL_MaximizeWindow;
    Result.MinimizeWindow = &RL_MinimizeWindow;
    Result.RestoreWindow = &RL_RestoreWindow;
    Result.SetWindowIcon = &RL_SetWindowIcon;
    Result.SetWindowTitle = &RL_SetWindowTitle;
    Result.SetWindowPosition = &RL_SetWindowPosition;
    Result.SetWindowMonitor = &RL_SetWindowMonitor;
    Result.SetWindowMinSize = &RL_SetWindowMinSize;
    Result.SetWindowSize = &RL_SetWindowSize;
    Result.SetWindowOpacity = &RL_SetWindowOpacity;
    Result.GetWindowHandle = &RL_GetWindowHandle;
    Result.GetScreenWidth = &RL_GetScreenWidth;
    Result.GetScreenHeight = &RL_GetScreenHeight;
    Result.GetRenderWidth = &RL_GetRenderWidth;
    Result.GetRenderHeight = &RL_GetRenderHeight;
    Result.GetMonitorCount = &RL_GetMonitorCount;
    Result.GetCurrentMonitor = &RL_GetCurrentMonitor;
    Result.GetMonitorPosition = &RL_GetMonitorPosition;
    Result.GetMonitorWidth = &RL_GetMonitorWidth;
    Result.GetMonitorHeight = &RL_GetMonitorHeight;
    Result.GetMonitorPhysicalWidth = &RL_GetMonitorPhysicalWidth;
    Result.GetMonitorPhysicalHeight = &RL_GetMonitorPhysicalHeight;
    Result.GetMonitorRefreshRate = &RL_GetMonitorRefreshRate;
    Result.GetWindowPosition = &RL_GetWindowPosition;
    Result.GetWindowScaleDPI = &RL_GetWindowScaleDPI;
    Result.GetMonitorName = &RL_GetMonitorName;
    Result.SetClipboardText = &RL_SetClipboardText;
    Result.GetClipboardText = &RL_GetClipboardText;
    Result.EnableEventWaiting = &RL_EnableEventWaiting;
    Result.DisableEventWaiting = &RL_DisableEventWaiting;
    Result.SwapScreenBuffer = &RL_SwapScreenBuffer;
    Result.PollInputEvents = &RL_PollInputEvents;
    Result.WaitTime = &RL_WaitTime;
    Result.ShowCursor = &RL_ShowCursor;
    Result.HideCursor = &RL_HideCursor;
    Result.IsCursorHidden = &RL_IsCursorHidden;
    Result.EnableCursor = &RL_EnableCursor;
    Result.DisableCursor = &RL_DisableCursor;
    Result.IsCursorOnScreen = &RL_IsCursorOnScreen;
    Result.ClearBackground = &RL_ClearBackground;
    Result.BeginDrawing = &RL_BeginDrawing;
    Result.EndDrawing = &RL_EndDrawing;
    Result.BeginMode2D = &RL_BeginMode2D;
    Result.EndMode2D = &RL_EndMode2D;
    Result.BeginMode3D = &RL_BeginMode3D;
    Result.EndMode3D = &RL_EndMode3D;
    Result.BeginTextureMode = &RL_BeginTextureMode;
    Result.EndTextureMode = &RL_EndTextureMode;
    Result.BeginShaderMode = &RL_BeginShaderMode;
    Result.EndShaderMode = &RL_EndShaderMode;
    Result.BeginBlendMode = &RL_BeginBlendMode;
    Result.EndBlendMode = &RL_EndBlendMode;
    Result.BeginScissorMode = &RL_BeginScissorMode;
    Result.EndScissorMode = &RL_EndScissorMode;
    Result.LoadShader = &RL_LoadShader;
    Result.LoadShaderFromMemory = &RL_LoadShaderFromMemory;
    Result.GetShaderLocation = &RL_GetShaderLocation;
    Result.GetShaderLocationAttrib = &RL_GetShaderLocationAttrib;
    Result.SetShaderValue = &RL_SetShaderValue;
    Result.SetShaderValueV = &RL_SetShaderValueV;
    Result.SetShaderValueMatrix = &RL_SetShaderValueMatrix;
    Result.SetShaderValueTexture = &RL_SetShaderValueTexture;
    Result.UnloadShader = &RL_UnloadShader;
    Result.GetMouseRay = &RL_GetMouseRay;
    Result.GetCameraMatrix = &RL_GetCameraMatrix;
    Result.GetCameraMatrix2D = &RL_GetCameraMatrix2D;
    Result.GetWorldToScreen = &RL_GetWorldToScreen;
    Result.GetScreenToWorld2D = &RL_GetScreenToWorld2D;
    Result.GetWorldToScreenEx = &RL_GetWorldToScreenEx;
    Result.GetWorldToScreen2D = &RL_GetWorldToScreen2D;
    Result.SetTargetFPS = &RL_SetTargetFPS;
    Result.GetFPS = &RL_GetFPS;
    Result.GetFrameTime = &RL_GetFrameTime;
    Result.GetTime = &RL_GetTime;
    Result.GetRandomValue = &RL_GetRandomValue;
    Result.SetRandomSeed = &RL_SetRandomSeed;
    Result.TakeScreenshot = &RL_TakeScreenshot;
    Result.SetConfigFlags = &RL_SetConfigFlags;
    Result.SetTraceLogLevel = &RL_SetTraceLogLevel;
    Result.MemAlloc = &RL_MemAlloc;
    Result.MemRealloc = &RL_MemRealloc;
    Result.MemFree = &RL_MemFree;
    Result.OpenURL = &RL_OpenURL;
    Result.SetTraceLogCallback = &RL_SetTraceLogCallback;
    Result.LoadFileData = &RL_LoadFileData;
    Result.UnloadFileData = &RL_UnloadFileData;
    Result.SaveFileData = &RL_SaveFileData;
    Result.ExportDataAsCode = &RL_ExportDataAsCode;
    Result.LoadFileText = &RL_LoadFileText;
    Result.UnloadFileText = &RL_UnloadFileText;
    Result.SaveFileText = &RL_SaveFileText;
    Result.FileExists = &RL_FileExists;
    Result.DirectoryExists = &RL_DirectoryExists;
    Result.IsFileExtension = &RL_IsFileExtension;
    Result.GetFileLength = &RL_GetFileLength;
    Result.GetFileExtension = &RL_GetFileExtension;
    Result.GetFileName = &RL_GetFileName;
    Result.GetFileNameWithoutExt = &RL_GetFileNameWithoutExt;
    Result.GetDirectoryPath = &RL_GetDirectoryPath;
    Result.GetPrevDirectoryPath = &RL_GetPrevDirectoryPath;
    Result.GetWorkingDirectory = &RL_GetWorkingDirectory;
    Result.GetApplicationDirectory = &RL_GetApplicationDirectory;
    Result.ChangeDirectory = &RL_ChangeDirectory;
    Result.IsPathFile = &RL_IsPathFile;
    Result.LoadDirectoryFiles = &RL_LoadDirectoryFiles;
    Result.LoadDirectoryFilesEx = &RL_LoadDirectoryFilesEx;
    Result.UnloadDirectoryFiles = &RL_UnloadDirectoryFiles;
    Result.IsFileDropped = &RL_IsFileDropped;
    Result.LoadDroppedFiles = &RL_LoadDroppedFiles;
    Result.UnloadDroppedFiles = &RL_UnloadDroppedFiles;
    Result.GetFileModTime = &RL_GetFileModTime;
    Result.CompressData = &RL_CompressData;
    Result.DecompressData = &RL_DecompressData;
    Result.EncodeDataBase64 = &RL_EncodeDataBase64;
    Result.DecodeDataBase64 = &RL_DecodeDataBase64;
    Result.IsKeyPressed = &RL_IsKeyPressed;
    Result.IsKeyDown = &RL_IsKeyDown;
    Result.IsKeyReleased = &RL_IsKeyReleased;
    Result.IsKeyUp = &RL_IsKeyUp;
    Result.SetExitKey = &RL_SetExitKey;
    Result.GetKeyPressed = &RL_GetKeyPressed;
    Result.GetCharPressed = &RL_GetCharPressed;
    Result.IsGamepadAvailable = &RL_IsGamepadAvailable;
    Result.GetGamepadName = &RL_GetGamepadName;
    Result.IsGamepadButtonPressed = &RL_IsGamepadButtonPressed;
    Result.IsGamepadButtonDown = &RL_IsGamepadButtonDown;
    Result.IsGamepadButtonReleased = &RL_IsGamepadButtonReleased;
    Result.IsGamepadButtonUp = &RL_IsGamepadButtonUp;
    Result.GetGamepadButtonPressed = &RL_GetGamepadButtonPressed;
    Result.GetGamepadAxisCount = &RL_GetGamepadAxisCount;
    Result.GetGamepadAxisMovement = &RL_GetGamepadAxisMovement;
    Result.SetGamepadMappings = &RL_SetGamepadMappings;
    Result.IsMouseButtonPressed = &RL_IsMouseButtonPressed;
    Result.IsMouseButtonDown = &RL_IsMouseButtonDown;
    Result.IsMouseButtonReleased = &RL_IsMouseButtonReleased;
    Result.IsMouseButtonUp = &RL_IsMouseButtonUp;
    Result.GetMouseX = &RL_GetMouseX;
    Result.GetMouseY = &RL_GetMouseY;
    Result.GetMousePosition = &RL_GetMousePosition;
    Result.GetMouseDelta = &RL_GetMouseDelta;
    Result.SetMousePosition = &RL_SetMousePosition;
    Result.SetMouseOffset = &RL_SetMouseOffset;
    Result.SetMouseScale = &RL_SetMouseScale;
    Result.GetMouseWheelMove = &RL_GetMouseWheelMove;
    Result.GetMouseWheelMoveV = &RL_GetMouseWheelMoveV;
    Result.SetMouseCursor = &RL_SetMouseCursor;
    Result.GetTouchX = &RL_GetTouchX;
    Result.GetTouchY = &RL_GetTouchY;
    Result.GetTouchPosition = &RL_GetTouchPosition;
    Result.GetTouchPointId = &RL_GetTouchPointId;
    Result.GetTouchPointCount = &RL_GetTouchPointCount;
    Result.SetGesturesEnabled = &RL_SetGesturesEnabled;
    Result.IsGestureDetected = &RL_IsGestureDetected;
    Result.GetGestureDetected = &RL_GetGestureDetected;
    Result.GetGestureHoldDuration = &RL_GetGestureHoldDuration;
    Result.GetGestureDragVector = &RL_GetGestureDragVector;
    Result.GetGestureDragAngle = &RL_GetGestureDragAngle;
    Result.GetGesturePinchVector = &RL_GetGesturePinchVector;
    Result.GetGesturePinchAngle = &RL_GetGesturePinchAngle;
    Result.SetCameraMode = &RL_SetCameraMode;
    Result.UpdateCamera = &RL_UpdateCamera;
    Result.SetCameraPanControl = &RL_SetCameraPanControl;
    Result.SetCameraAltControl = &RL_SetCameraAltControl;
    Result.SetCameraSmoothZoomControl = &RL_SetCameraSmoothZoomControl;
    Result.SetCameraMoveControls = &RL_SetCameraMoveControls;
    Result.SetShapesTexture = &RL_SetShapesTexture;
    Result.DrawPixel = &RL_DrawPixel;
    Result.DrawPixelV = &RL_DrawPixelV;
    Result.DrawLine = &RL_DrawLine;
    Result.DrawLineV = &RL_DrawLineV;
    Result.DrawLineEx = &RL_DrawLineEx;
    Result.DrawLineBezier = &RL_DrawLineBezier;
    Result.DrawLineBezierQuad = &RL_DrawLineBezierQuad;
    Result.DrawLineBezierCubic = &RL_DrawLineBezierCubic;
    Result.DrawLineStrip = &RL_DrawLineStrip;
    Result.DrawCircle = &RL_DrawCircle;
    Result.DrawCircleSector = &RL_DrawCircleSector;
    Result.DrawCircleSectorLines = &RL_DrawCircleSectorLines;
    Result.DrawCircleGradient = &RL_DrawCircleGradient;
    Result.DrawCircleV = &RL_DrawCircleV;
    Result.DrawCircleLines = &RL_DrawCircleLines;
    Result.DrawEllipse = &RL_DrawEllipse;
    Result.DrawEllipseLines = &RL_DrawEllipseLines;
    Result.DrawRing = &RL_DrawRing;
    Result.DrawRingLines = &RL_DrawRingLines;
    Result.DrawRectangle = &RL_DrawRectangle;
    Result.DrawRectangleV = &RL_DrawRectangleV;
    Result.DrawRectangleRec = &RL_DrawRectangleRec;
    Result.DrawRectanglePro = &RL_DrawRectanglePro;
    Result.DrawRectangleGradientV = &RL_DrawRectangleGradientV;
    Result.DrawRectangleGradientH = &RL_DrawRectangleGradientH;
    Result.DrawRectangleGradientEx = &RL_DrawRectangleGradientEx;
    Result.DrawRectangleLines = &RL_DrawRectangleLines;
    Result.DrawRectangleLinesEx = &RL_DrawRectangleLinesEx;
    Result.DrawRectangleRounded = &RL_DrawRectangleRounded;
    Result.DrawRectangleRoundedLines = &RL_DrawRectangleRoundedLines;
    Result.DrawTriangle = &RL_DrawTriangle;
    Result.DrawTriangleRotated = &DrawTriangleRotated;
    Result.DrawTriangleLines = &RL_DrawTriangleLines;
    Result.DrawTriangleLinesRotated = &DrawTriangleLinesRotated;
    Result.DrawTriangleFan = &RL_DrawTriangleFan;
    Result.DrawTriangleStrip = &RL_DrawTriangleStrip;
    Result.DrawPolygon = &DrawPolygon;
    Result.DrawPoly = &RL_DrawPoly;
    Result.DrawPolyLines = &RL_DrawPolyLines;
    Result.DrawPolyLinesEx = &RL_DrawPolyLinesEx;
    Result.CheckCollisionRecs = &RL_CheckCollisionRecs;
    Result.CheckCollisionCircles = &RL_CheckCollisionCircles;
    Result.CheckCollisionCircleRec = &RL_CheckCollisionCircleRec;
    Result.CheckCollisionPointRec = &RL_CheckCollisionPointRec;
    Result.CheckCollisionPointCircle = &RL_CheckCollisionPointCircle;
    Result.CheckCollisionPointTriangle = &RL_CheckCollisionPointTriangle;
    Result.CheckCollisionLines = &RL_CheckCollisionLines;
    Result.CheckCollisionPointLine = &RL_CheckCollisionPointLine;
    Result.GetCollisionRec = &RL_GetCollisionRec;
    Result.RL_LoadImage = &RL_LoadImage;
    Result.LoadImageRaw = &RL_LoadImageRaw;
    Result.LoadImageAnim = &RL_LoadImageAnim;
    Result.LoadImageFromMemory = &RL_LoadImageFromMemory;
    Result.LoadImageFromTexture = &RL_LoadImageFromTexture;
    Result.LoadImageFromScreen = &RL_LoadImageFromScreen;
    Result.UnloadImage = &RL_UnloadImage;
    Result.ExportImage = &RL_ExportImage;
    Result.ExportImageAsCode = &RL_ExportImageAsCode;
    Result.GenImageColor = &RL_GenImageColor;
    Result.GenImageGradientV = &RL_GenImageGradientV;
    Result.GenImageGradientH = &RL_GenImageGradientH;
    Result.GenImageGradientRadial = &RL_GenImageGradientRadial;
    Result.GenImageChecked = &RL_GenImageChecked;
    Result.GenImageWhiteNoise = &RL_GenImageWhiteNoise;
    Result.GenImageCellular = &RL_GenImageCellular;
    Result.ImageCopy = &RL_ImageCopy;
    Result.ImageFromImage = &RL_ImageFromImage;
    Result.ImageText = &RL_ImageText;
    Result.ImageTextEx = &RL_ImageTextEx;
    Result.ImageFormat = &RL_ImageFormat;
    Result.ImageToPOT = &RL_ImageToPOT;
    Result.ImageCrop = &RL_ImageCrop;
    Result.ImageAlphaCrop = &RL_ImageAlphaCrop;
    Result.ImageAlphaClear = &RL_ImageAlphaClear;
    Result.ImageAlphaMask = &RL_ImageAlphaMask;
    Result.ImageAlphaPremultiply = &RL_ImageAlphaPremultiply;
    Result.ImageResize = &RL_ImageResize;
    Result.ImageResizeNN = &RL_ImageResizeNN;
    Result.ImageResizeCanvas = &RL_ImageResizeCanvas;
    Result.ImageMipmaps = &RL_ImageMipmaps;
    Result.ImageDither = &RL_ImageDither;
    Result.ImageFlipVertical = &RL_ImageFlipVertical;
    Result.ImageFlipHorizontal = &RL_ImageFlipHorizontal;
    Result.ImageRotateCW = &RL_ImageRotateCW;
    Result.ImageRotateCCW = &RL_ImageRotateCCW;
    Result.ImageColorTint = &RL_ImageColorTint;
    Result.ImageColorInvert = &RL_ImageColorInvert;
    Result.ImageColorGrayscale = &RL_ImageColorGrayscale;
    Result.ImageColorContrast = &RL_ImageColorContrast;
    Result.ImageColorBrightness = &RL_ImageColorBrightness;
    Result.ImageColorReplace = &RL_ImageColorReplace;
    Result.LoadImageColors = &RL_LoadImageColors;
    Result.LoadImagePalette = &RL_LoadImagePalette;
    Result.UnloadImageColors = &RL_UnloadImageColors;
    Result.UnloadImagePalette = &RL_UnloadImagePalette;
    Result.GetImageAlphaBorder = &RL_GetImageAlphaBorder;
    Result.GetImageColor = &RL_GetImageColor;
    Result.ImageClearBackground = &RL_ImageClearBackground;
    Result.ImageDrawPixel = &RL_ImageDrawPixel;
    Result.ImageDrawPixelV = &RL_ImageDrawPixelV;
    Result.ImageDrawLine = &RL_ImageDrawLine;
    Result.ImageDrawLineV = &RL_ImageDrawLineV;
    Result.ImageDrawCircle = &RL_ImageDrawCircle;
    Result.ImageDrawCircleV = &RL_ImageDrawCircleV;
    Result.ImageDrawRectangle = &RL_ImageDrawRectangle;
    Result.ImageDrawRectangleV = &RL_ImageDrawRectangleV;
    Result.ImageDrawRectangleRec = &RL_ImageDrawRectangleRec;
    Result.ImageDrawRectangleLines = &RL_ImageDrawRectangleLines;
    Result.ImageDraw = &RL_ImageDraw;
    Result.ImageDrawText = &RL_ImageDrawText;
    Result.ImageDrawTextEx = &RL_ImageDrawTextEx;
    Result.LoadTexture = &RL_LoadTexture;
    Result.LoadTextureFromImage = &RL_LoadTextureFromImage;
    Result.LoadTextureCubemap = &RL_LoadTextureCubemap;
    Result.LoadRenderTexture = &RL_LoadRenderTexture;
    Result.UnloadTexture = &RL_UnloadTexture;
    Result.UnloadRenderTexture = &RL_UnloadRenderTexture;
    Result.UpdateTexture = &RL_UpdateTexture;
    Result.UpdateTextureRec = &RL_UpdateTextureRec;
    Result.GenTextureMipmaps = &RL_GenTextureMipmaps;
    Result.SetTextureFilter = &RL_SetTextureFilter;
    Result.SetTextureWrap = &RL_SetTextureWrap;
    Result.DrawRenderTexture = &DrawRenderTexture;
    Result.DrawTexture = &RL_DrawTexture;
    Result.DrawTextureV = &RL_DrawTextureV;
    Result.DrawTextureEx = &RL_DrawTextureEx;
    Result.DrawTextureRotatedScaled = &DrawTextureRotatedScaled;
    Result.DrawTextureRotated = &DrawTextureRotated;
    Result.DrawTextureRec = &RL_DrawTextureRec;
    Result.DrawTextureQuad = &RL_DrawTextureQuad;
    Result.DrawTextureTiled = &RL_DrawTextureTiled;
    Result.DrawTexturePro = &RL_DrawTexturePro;
    Result.DrawTextureNPatch = &RL_DrawTextureNPatch;
    Result.DrawTexturePoly = &RL_DrawTexturePoly;
    Result.Fade = &RL_Fade;
    Result.ColorToInt = &RL_ColorToInt;
    Result.ColorNormalize = &RL_ColorNormalize;
    Result.ColorFromNormalized = &RL_ColorFromNormalized;
    Result.ColorToHSV = &RL_ColorToHSV;
    Result.ColorFromHSV = &RL_ColorFromHSV;
    Result.ColorAlpha = &RL_ColorAlpha;
    Result.ColorAlphaBlend = &RL_ColorAlphaBlend;
    Result.GetColor = &RL_GetColor;
    Result.GetPixelColor = &RL_GetPixelColor;
    Result.SetPixelColor = &RL_SetPixelColor;
    Result.GetPixelDataSize = &RL_GetPixelDataSize;
    Result.GetFontDefault = &RL_GetFontDefault;
    Result.LoadFont = &RL_LoadFont;
    Result.LoadFontEx = &RL_LoadFontEx;
    Result.LoadFontFromImage = &RL_LoadFontFromImage;
    Result.LoadFontFromMemory = &RL_LoadFontFromMemory;
    Result.LoadFontData = &RL_LoadFontData;
    Result.GenImageFontAtlas = &RL_GenImageFontAtlas;
    Result.UnloadFontData = &RL_UnloadFontData;
    Result.UnloadFont = &RL_UnloadFont;
    Result.ExportFontAsCode = &RL_ExportFontAsCode;
    Result.DrawFPS = &RL_DrawFPS;
    Result.RL_DrawText = &RL_DrawText;
    Result.RL_DrawTextEx = &RL_DrawTextEx;
    Result.DrawTextPro = &RL_DrawTextPro;
    Result.DrawTextCodepoint = &RL_DrawTextCodepoint;
    Result.DrawTextCodepoints = &RL_DrawTextCodepoints;
    Result.MeasureText = &RL_MeasureText;
    Result.MeasureTextEx = &RL_MeasureTextEx;
    Result.GetGlyphIndex = &RL_GetGlyphIndex;
    Result.GetGlyphInfo = &RL_GetGlyphInfo;
    Result.GetGlyphAtlasRec = &RL_GetGlyphAtlasRec;
    Result.LoadCodepoints = &RL_LoadCodepoints;
    Result.UnloadCodepoints = &RL_UnloadCodepoints;
    Result.GetCodepointCount = &RL_GetCodepointCount;
    Result.GetCodepoint = &RL_GetCodepoint;
    Result.CodepointToUTF8 = &RL_CodepointToUTF8;
    Result.TextCodepointsToUTF8 = &RL_TextCodepointsToUTF8;
    Result.TextCopy = &RL_TextCopy;
    Result.TextIsEqual = &RL_TextIsEqual;
    Result.TextLength = &RL_TextLength;
    Result.TextSubtext = &RL_TextSubtext;
    Result.TextReplace = &RL_TextReplace;
    Result.TextInsert = &RL_TextInsert;
    Result.TextJoin = &RL_TextJoin;
    Result.TextSplit = &RL_TextSplit;
    Result.TextAppend = &RL_TextAppend;
    Result.TextFindIndex = &RL_TextFindIndex;
    Result.TextToUpper = &RL_TextToUpper;
    Result.TextToLower = &RL_TextToLower;
    Result.TextToPascal = &RL_TextToPascal;
    Result.TextToInteger = &RL_TextToInteger;
    Result.DrawLine3D = &RL_DrawLine3D;
    Result.DrawPoint3D = &RL_DrawPoint3D;
    Result.DrawCircle3D = &RL_DrawCircle3D;
    Result.DrawTriangle3D = &RL_DrawTriangle3D;
    Result.DrawTriangleStrip3D = &RL_DrawTriangleStrip3D;
    Result.DrawCube = &RL_DrawCube;
    Result.DrawCubeV = &RL_DrawCubeV;
    Result.DrawCubeWires = &RL_DrawCubeWires;
    Result.DrawCubeWiresV = &RL_DrawCubeWiresV;
    Result.DrawCubeTexture = &RL_DrawCubeTexture;
    Result.DrawCubeTextureRec = &RL_DrawCubeTextureRec;
    Result.DrawSphere = &RL_DrawSphere;
    Result.DrawSphereEx = &RL_DrawSphereEx;
    Result.DrawSphereWires = &RL_DrawSphereWires;
    Result.DrawCylinder = &RL_DrawCylinder;
    Result.DrawCylinderEx = &RL_DrawCylinderEx;
    Result.DrawCylinderWires = &RL_DrawCylinderWires;
    Result.DrawCylinderWiresEx = &RL_DrawCylinderWiresEx;
    Result.DrawPlane = &RL_DrawPlane;
    Result.DrawRay = &RL_DrawRay;
    Result.DrawGrid = &RL_DrawGrid;
    Result.LoadModel = &RL_LoadModel;
    Result.LoadModelFromMesh = &RL_LoadModelFromMesh;
    Result.UnloadModel = &RL_UnloadModel;
    Result.UnloadModelKeepMeshes = &RL_UnloadModelKeepMeshes;
    Result.GetModelBoundingBox = &RL_GetModelBoundingBox;
    Result.DrawModel = &RL_DrawModel;
    Result.DrawModelEx = &RL_DrawModelEx;
    Result.DrawModelWires = &RL_DrawModelWires;
    Result.DrawModelWiresEx = &RL_DrawModelWiresEx;
    Result.DrawBoundingBox = &RL_DrawBoundingBox;
    Result.DrawBillboard = &RL_DrawBillboard;
    Result.DrawBillboardRec = &RL_DrawBillboardRec;
    Result.DrawBillboardPro = &RL_DrawBillboardPro;
    Result.UploadMesh = &RL_UploadMesh;
    Result.UpdateMeshBuffer = &RL_UpdateMeshBuffer;
    Result.UnloadMesh = &RL_UnloadMesh;
    Result.DrawMesh = &RL_DrawMesh;
    Result.DrawMeshInstanced = &RL_DrawMeshInstanced;
    Result.ExportMesh = &RL_ExportMesh;
    Result.GetMeshBoundingBox = &RL_GetMeshBoundingBox;
    Result.GenMeshTangents = &RL_GenMeshTangents;
    Result.GenMeshPoly = &RL_GenMeshPoly;
    Result.GenMeshPlane = &RL_GenMeshPlane;
    Result.GenMeshCube = &RL_GenMeshCube;
    Result.GenMeshSphere = &RL_GenMeshSphere;
    Result.GenMeshHemiSphere = &RL_GenMeshHemiSphere;
    Result.GenMeshCylinder = &RL_GenMeshCylinder;
    Result.GenMeshCone = &RL_GenMeshCone;
    Result.GenMeshTorus = &RL_GenMeshTorus;
    Result.GenMeshKnot = &RL_GenMeshKnot;
    Result.GenMeshHeightmap = &RL_GenMeshHeightmap;
    Result.GenMeshCubicmap = &RL_GenMeshCubicmap;
    Result.LoadMaterials = &RL_LoadMaterials;
    Result.LoadMaterialDefault = &RL_LoadMaterialDefault;
    Result.UnloadMaterial = &RL_UnloadMaterial;
    Result.SetMaterialTexture = &RL_SetMaterialTexture;
    Result.SetModelMeshMaterial = &RL_SetModelMeshMaterial;
    Result.LoadModelAnimations = &RL_LoadModelAnimations;
    Result.UpdateModelAnimation = &RL_UpdateModelAnimation;
    Result.UnloadModelAnimation = &RL_UnloadModelAnimation;
    Result.UnloadModelAnimations = &RL_UnloadModelAnimations;
    Result.IsModelAnimationValid = &RL_IsModelAnimationValid;
    Result.CheckCollisionSpheres = &RL_CheckCollisionSpheres;
    Result.CheckCollisionBoxes = &RL_CheckCollisionBoxes;
    Result.CheckCollisionBoxSphere = &RL_CheckCollisionBoxSphere;
    Result.GetRayCollisionSphere = &RL_GetRayCollisionSphere;
    Result.GetRayCollisionBox = &RL_GetRayCollisionBox;
    Result.GetRayCollisionMesh = &RL_GetRayCollisionMesh;
    Result.GetRayCollisionTriangle = &RL_GetRayCollisionTriangle;
    Result.GetRayCollisionQuad = &RL_GetRayCollisionQuad;
    Result.InitAudioDevice = &RL_InitAudioDevice;
    Result.CloseAudioDevice = &RL_CloseAudioDevice;
    Result.IsAudioDeviceReady = &RL_IsAudioDeviceReady;
    Result.SetMasterVolume = &RL_SetMasterVolume;
    Result.LoadWave = &RL_LoadWave;
    Result.LoadWaveFromMemory = &RL_LoadWaveFromMemory;
    Result.LoadSound = &RL_LoadSound;
    Result.LoadSoundFromWave = &RL_LoadSoundFromWave;
    Result.UpdateSound = &RL_UpdateSound;
    Result.UnloadWave = &RL_UnloadWave;
    Result.UnloadSound = &RL_UnloadSound;
    Result.ExportWave = &RL_ExportWave;
    Result.ExportWaveAsCode = &RL_ExportWaveAsCode;
    Result.RL_PlaySound = &RL_PlaySound;
    Result.StopSound = &RL_StopSound;
    Result.PauseSound = &RL_PauseSound;
    Result.ResumeSound = &RL_ResumeSound;
    Result.PlaySoundMulti = &RL_PlaySoundMulti;
    Result.StopSoundMulti = &RL_StopSoundMulti;
    Result.GetSoundsPlaying = &RL_GetSoundsPlaying;
    Result.IsSoundPlaying = &RL_IsSoundPlaying;
    Result.SetSoundVolume = &RL_SetSoundVolume;
    Result.SetSoundPitch = &RL_SetSoundPitch;
    Result.SetSoundPan = &RL_SetSoundPan;
    Result.WaveCopy = &RL_WaveCopy;
    Result.WaveCrop = &RL_WaveCrop;
    Result.WaveFormat = &RL_WaveFormat;
    Result.LoadWaveSamples = &RL_LoadWaveSamples;
    Result.UnloadWaveSamples = &RL_UnloadWaveSamples;
    Result.LoadMusicStream = &RL_LoadMusicStream;
    Result.LoadMusicStreamFromMemory = &RL_LoadMusicStreamFromMemory;
    Result.UnloadMusicStream = &RL_UnloadMusicStream;
    Result.PlayMusicStream = &RL_PlayMusicStream;
    Result.IsMusicStreamPlaying = &RL_IsMusicStreamPlaying;
    Result.UpdateMusicStream = &RL_UpdateMusicStream;
    Result.StopMusicStream = &RL_StopMusicStream;
    Result.PauseMusicStream = &RL_PauseMusicStream;
    Result.ResumeMusicStream = &RL_ResumeMusicStream;
    Result.SeekMusicStream = &RL_SeekMusicStream;
    Result.SetMusicVolume = &RL_SetMusicVolume;
    Result.SetMusicPitch = &RL_SetMusicPitch;
    Result.SetMusicPan = &RL_SetMusicPan;
    Result.GetMusicTimeLength = &RL_GetMusicTimeLength;
    Result.GetMusicTimePlayed = &RL_GetMusicTimePlayed;
    Result.LoadAudioStream = &RL_LoadAudioStream;
    Result.UnloadAudioStream = &RL_UnloadAudioStream;
    Result.UpdateAudioStream = &RL_UpdateAudioStream;
    Result.IsAudioStreamProcessed = &RL_IsAudioStreamProcessed;
    Result.PlayAudioStream = &RL_PlayAudioStream;
    Result.PauseAudioStream = &RL_PauseAudioStream;
    Result.ResumeAudioStream = &RL_ResumeAudioStream;
    Result.IsAudioStreamPlaying = &RL_IsAudioStreamPlaying;
    Result.StopAudioStream = &RL_StopAudioStream;
    Result.SetAudioStreamVolume = &RL_SetAudioStreamVolume;
    Result.SetAudioStreamPitch = &RL_SetAudioStreamPitch;
    Result.SetAudioStreamPan = &RL_SetAudioStreamPan;
    Result.SetAudioStreamBufferSizeDefault = &RL_SetAudioStreamBufferSizeDefault;
    Result.SetAudioStreamCallback = &RL_SetAudioStreamCallback;
    Result.AttachAudioStreamProcessor = &RL_AttachAudioStreamProcessor;
    Result.DetachAudioStreamProcessor = &RL_DetachAudioStreamProcessor;

    return (Result);
}
# else
raylib_wrapper_code
LoadRaylibWrapperDLL(char *RaylibDLLPath)
{
    raylib_wrapper_code Result = {};

    WIN32_FILE_ATTRIBUTE_DATA Ignored;

    HMODULE DLLHandle = LoadLibraryA(RaylibDLLPath);
    ASSERT(DLLHandle);
    if (DLLHandle)
    {
        Result.InitWindow = (rl_init_window)GetProcAddress(DLLHandle, "RL_InitWindow");
        Result.WindowShouldClose = (rl_window_should_close)GetProcAddress(DLLHandle, "RL_WindowShouldClose");
        Result.CloseWindow = (rl_close_window)GetProcAddress(DLLHandle, "RL_CloseWindow");
        Result.IsWindowReady = (rl_is_window_ready)GetProcAddress(DLLHandle, "RL_IsWindowReady");
        Result.IsWindowFullscreen = (rl_is_window_fullscreen)GetProcAddress(DLLHandle, "RL_IsWindowFullscreen");
        Result.IsWindowHidden = (rl_is_window_hidden)GetProcAddress(DLLHandle, "RL_IsWindowHidden");
        Result.IsWindowMinimized = (rl_is_window_minimized)GetProcAddress(DLLHandle, "RL_IsWindowMinimized");
        Result.IsWindowMaximized = (rl_is_window_maximized)GetProcAddress(DLLHandle, "RL_IsWindowMaximized");
        Result.IsWindowFocused = (rl_is_window_focused)GetProcAddress(DLLHandle, "RL_IsWindowFocused");
        Result.IsWindowResized = (rl_is_window_resized)GetProcAddress(DLLHandle, "RL_IsWindowResized");
        Result.IsWindowState = (rl_is_window_state)GetProcAddress(DLLHandle, "RL_IsWindowState");
        Result.SetWindowState = (rl_set_window_state)GetProcAddress(DLLHandle, "RL_SetWindowState");
        Result.ClearWindowState = (rl_clear_window_state)GetProcAddress(DLLHandle, "RL_ClearWindowState");
        Result.ToggleFullscreen = (rl_toggle_fullscreen)GetProcAddress(DLLHandle, "RL_ToggleFullscreen");
        Result.MaximizeWindow = (rl_maximize_window)GetProcAddress(DLLHandle, "RL_MaximizeWindow");
        Result.MinimizeWindow = (rl_minimize_window)GetProcAddress(DLLHandle, "RL_MinimizeWindow");
        Result.RestoreWindow = (rl_restore_window)GetProcAddress(DLLHandle, "RL_RestoreWindow");
        Result.SetWindowIcon = (rl_set_window_icon)GetProcAddress(DLLHandle, "RL_SetWindowIcon");
        Result.SetWindowTitle = (rl_set_window_title)GetProcAddress(DLLHandle, "RL_SetWindowTitle");
        Result.SetWindowPosition = (rl_set_window_position)GetProcAddress(DLLHandle, "RL_SetWindowPosition");
        Result.SetWindowMonitor = (rl_set_window_monitor)GetProcAddress(DLLHandle, "RL_SetWindowMonitor");
        Result.SetWindowMinSize = (rl_set_window_min_size)GetProcAddress(DLLHandle, "RL_SetWindowMinSize");
        Result.SetWindowSize = (rl_set_window_size)GetProcAddress(DLLHandle, "RL_SetWindowSize");
        Result.SetWindowOpacity = (rl_set_window_opacity)GetProcAddress(DLLHandle, "RL_SetWindowOpacity");
        Result.GetWindowHandle = (rl_get_window_handle)GetProcAddress(DLLHandle, "RL_GetWindowHandle");
        Result.GetScreenWidth = (rl_get_screen_width)GetProcAddress(DLLHandle, "RL_GetScreenWidth");
        Result.GetScreenHeight = (rl_get_screen_height)GetProcAddress(DLLHandle, "RL_GetScreenHeight");
        Result.GetRenderWidth = (rl_get_render_width)GetProcAddress(DLLHandle, "RL_GetRenderWidth");
        Result.GetRenderHeight = (rl_get_render_height)GetProcAddress(DLLHandle, "RL_GetRenderHeight");
        Result.GetMonitorCount = (rl_get_monitor_count)GetProcAddress(DLLHandle, "RL_GetMonitorCount");
        Result.GetCurrentMonitor = (rl_get_current_monitor)GetProcAddress(DLLHandle, "RL_GetCurrentMonitor");
        Result.GetMonitorPosition = (rl_get_monitor_position)GetProcAddress(DLLHandle, "RL_GetMonitorPosition");
        Result.GetMonitorWidth = (rl_get_monitor_width)GetProcAddress(DLLHandle, "RL_GetMonitorWidth");
        Result.GetMonitorHeight = (rl_get_monitor_height)GetProcAddress(DLLHandle, "RL_GetMonitorHeight");
        Result.GetMonitorPhysicalWidth = (rl_get_monitor_physical_width)GetProcAddress(DLLHandle, "RL_GetMonitorPhysicalWidth");
        Result.GetMonitorPhysicalHeight = (rl_get_monitor_physical_height)GetProcAddress(DLLHandle, "RL_GetMonitorPhysicalHeight");
        Result.GetMonitorRefreshRate = (rl_get_monitor_refresh_rate)GetProcAddress(DLLHandle, "RL_GetMonitorRefreshRate");
        Result.GetWindowPosition = (rl_get_window_position)GetProcAddress(DLLHandle, "RL_GetWindowPosition");
        Result.GetWindowScaleDPI = (rl_get_window_scale_dpi)GetProcAddress(DLLHandle, "RL_GetWindowScaleDPI");
        Result.GetMonitorName = (rl_get_monitor_name)GetProcAddress(DLLHandle, "RL_GetMonitorName");
        Result.SetClipboardText = (rl_set_clipboard_text)GetProcAddress(DLLHandle, "RL_SetClipboardText");
        Result.GetClipboardText = (rl_get_clipboard_text)GetProcAddress(DLLHandle, "RL_GetClipboardText");
        Result.EnableEventWaiting = (rl_enable_event_waiting)GetProcAddress(DLLHandle, "RL_EnableEventWaiting");
        Result.DisableEventWaiting = (rl_disable_event_waiting)GetProcAddress(DLLHandle, "RL_DisableEventWaiting");
        Result.SwapScreenBuffer = (rl_swap_screen_buffer)GetProcAddress(DLLHandle, "RL_SwapScreenBuffer");
        Result.PollInputEvents = (rl_poll_input_events)GetProcAddress(DLLHandle, "RL_PollInputEvents");
        Result.WaitTime = (rl_wait_time)GetProcAddress(DLLHandle, "RL_WaitTime");
        Result.ShowCursor = (rl_show_cursor)GetProcAddress(DLLHandle, "RL_ShowCursor");
        Result.HideCursor = (rl_hide_cursor)GetProcAddress(DLLHandle, "RL_HideCursor");
        Result.IsCursorHidden = (rl_is_cursor_hidden)GetProcAddress(DLLHandle, "RL_IsCursorHidden");
        Result.EnableCursor = (rl_enable_cursor)GetProcAddress(DLLHandle, "RL_EnableCursor");
        Result.DisableCursor = (rl_disable_cursor)GetProcAddress(DLLHandle, "RL_DisableCursor");
        Result.IsCursorOnScreen = (rl_is_cursor_on_screen)GetProcAddress(DLLHandle, "RL_IsCursorOnScreen");
        Result.ClearBackground = (rl_clear_background)GetProcAddress(DLLHandle, "RL_ClearBackground");
        Result.BeginDrawing = (rl_begin_drawing)GetProcAddress(DLLHandle, "RL_BeginDrawing");
        Result.EndDrawing = (rl_end_drawing)GetProcAddress(DLLHandle, "RL_EndDrawing");
        Result.BeginMode2D = (rl_begin_mode_2d)GetProcAddress(DLLHandle, "RL_BeginMode2D");
        Result.EndMode2D = (rl_end_mode_2d)GetProcAddress(DLLHandle, "RL_EndMode2D");
        Result.BeginMode3D = (rl_begin_mode_3d)GetProcAddress(DLLHandle, "RL_BeginMode3D");
        Result.EndMode3D = (rl_end_mode_3d)GetProcAddress(DLLHandle, "RL_EndMode3D");
        Result.BeginTextureMode = (rl_begin_texture_mode)GetProcAddress(DLLHandle, "RL_BeginTextureMode");
        Result.EndTextureMode = (rl_end_texture_mode)GetProcAddress(DLLHandle, "RL_EndTextureMode");
        Result.BeginShaderMode = (rl_begin_shader_mode)GetProcAddress(DLLHandle, "RL_BeginShaderMode");
        Result.EndShaderMode = (rl_end_shader_mode)GetProcAddress(DLLHandle, "RL_EndShaderMode");
        Result.BeginBlendMode = (rl_begin_blend_mode)GetProcAddress(DLLHandle, "RL_BeginBlendMode");
        Result.EndBlendMode = (rl_end_blend_mode)GetProcAddress(DLLHandle, "RL_EndBlendMode");
        Result.BeginScissorMode = (rl_begin_scissor_mode)GetProcAddress(DLLHandle, "RL_BeginScissorMode");
        Result.EndScissorMode = (rl_end_scissor_mode)GetProcAddress(DLLHandle, "RL_EndScissorMode");
        Result.LoadShader = (rl_load_shader)GetProcAddress(DLLHandle, "RL_LoadShader");
        Result.LoadShaderFromMemory = (rl_load_shader_from_memory)GetProcAddress(DLLHandle, "RL_LoadShaderFromMemory");
        Result.GetShaderLocation = (rl_get_shader_location)GetProcAddress(DLLHandle, "RL_GetShaderLocation");
        Result.GetShaderLocationAttrib = (rl_get_shader_location_attrib)GetProcAddress(DLLHandle, "RL_GetShaderLocationAttrib");
        Result.SetShaderValue = (rl_set_shader_value)GetProcAddress(DLLHandle, "RL_SetShaderValue");
        Result.SetShaderValueV = (rl_set_shader_value_v)GetProcAddress(DLLHandle, "RL_SetShaderValueV");
        Result.SetShaderValueMatrix = (rl_set_shader_value_matrix)GetProcAddress(DLLHandle, "RL_SetShaderValueMatrix");
        Result.SetShaderValueTexture = (rl_set_shader_value_texture)GetProcAddress(DLLHandle, "RL_SetShaderValueTexture");
        Result.UnloadShader = (rl_unload_shader)GetProcAddress(DLLHandle, "RL_UnloadShader");
        Result.GetMouseRay = (rl_get_mouse_ray)GetProcAddress(DLLHandle, "RL_GetMouseRay");
        Result.GetCameraMatrix = (rl_get_camera_matrix)GetProcAddress(DLLHandle, "RL_GetCameraMatrix");
        Result.GetCameraMatrix2D = (rl_get_camera_matrix_2d)GetProcAddress(DLLHandle, "RL_GetCameraMatrix2D");
        Result.GetWorldToScreen = (rl_get_world_to_screen)GetProcAddress(DLLHandle, "RL_GetWorldToScreen");
        Result.GetScreenToWorld2D = (rl_get_screen_to_world_2d)GetProcAddress(DLLHandle, "RL_GetScreenToWorld2D");
        Result.GetWorldToScreenEx = (rl_get_world_to_screen_ex)GetProcAddress(DLLHandle, "RL_GetWorldToScreenEx");
        Result.GetWorldToScreen2D = (rl_get_world_to_screen_2d)GetProcAddress(DLLHandle, "RL_GetWorldToScreen2D");
        Result.SetTargetFPS = (rl_set_target_fps)GetProcAddress(DLLHandle, "RL_SetTargetFPS");
        Result.GetFPS = (rl_get_fps)GetProcAddress(DLLHandle, "RL_GetFPS");
        Result.GetFrameTime = (rl_get_frame_time)GetProcAddress(DLLHandle, "RL_GetFrameTime");
        Result.GetTime = (rl_get_time)GetProcAddress(DLLHandle, "RL_GetTime");
        Result.GetRandomValue = (rl_get_random_value)GetProcAddress(DLLHandle, "RL_GetRandomValue");
        Result.SetRandomSeed = (rl_set_random_seed)GetProcAddress(DLLHandle, "RL_SetRandomSeed");
        Result.TakeScreenshot = (rl_take_screenshot)GetProcAddress(DLLHandle, "RL_TakeScreenshot");
        Result.SetConfigFlags = (rl_set_config_flags)GetProcAddress(DLLHandle, "RL_SetConfigFlags");
        Result.SetTraceLogLevel = (rl_set_trace_log_level)GetProcAddress(DLLHandle, "RL_SetTraceLogLevel");
        Result.MemAlloc = (rl_mem_alloc)GetProcAddress(DLLHandle, "RL_MemAlloc");
        Result.MemRealloc = (rl_mem_realloc)GetProcAddress(DLLHandle, "RL_MemRealloc");
        Result.MemFree = (rl_mem_free)GetProcAddress(DLLHandle, "RL_MemFree");
        Result.OpenURL = (rl_open_url)GetProcAddress(DLLHandle, "RL_OpenURL");
        Result.SetTraceLogCallback = (rl_set_trace_log_callback)GetProcAddress(DLLHandle, "RL_SetTraceLogCallback");
        Result.LoadFileData = (rl_load_file_data)GetProcAddress(DLLHandle, "RL_LoadFileData");
        Result.UnloadFileData = (rl_unload_file_data)GetProcAddress(DLLHandle, "RL_UnloadFileData");
        Result.SaveFileData = (rl_save_file_data)GetProcAddress(DLLHandle, "RL_SaveFileData");
        Result.ExportDataAsCode = (rl_export_data_as_code)GetProcAddress(DLLHandle, "RL_ExportDataAsCode");
        Result.LoadFileText = (rl_load_file_text)GetProcAddress(DLLHandle, "RL_LoadFileText");
        Result.UnloadFileText = (rl_unload_file_text)GetProcAddress(DLLHandle, "RL_UnloadFileText");
        Result.SaveFileText = (rl_save_file_text)GetProcAddress(DLLHandle, "RL_SaveFileText");
        Result.FileExists = (rl_file_exists)GetProcAddress(DLLHandle, "RL_FileExists");
        Result.DirectoryExists = (rl_directory_exists)GetProcAddress(DLLHandle, "RL_DirectoryExists");
        Result.IsFileExtension = (rl_is_file_extension)GetProcAddress(DLLHandle, "RL_IsFileExtension");
        Result.GetFileLength = (rl_get_file_length)GetProcAddress(DLLHandle, "RL_GetFileLength");
        Result.GetFileExtension = (rl_get_file_extension)GetProcAddress(DLLHandle, "RL_GetFileExtension");
        Result.GetFileName = (rl_get_file_name)GetProcAddress(DLLHandle, "RL_GetFileName");
        Result.GetFileNameWithoutExt = (rl_get_file_name_without_ext)GetProcAddress(DLLHandle, "RL_GetFileNameWithoutExt");
        Result.GetDirectoryPath = (rl_get_directory_path)GetProcAddress(DLLHandle, "RL_GetDirectoryPath");
        Result.GetPrevDirectoryPath = (rl_get_prev_directory_path)GetProcAddress(DLLHandle, "RL_GetPrevDirectoryPath");
        Result.GetWorkingDirectory = (rl_get_working_directory)GetProcAddress(DLLHandle, "RL_GetWorkingDirectory");
        Result.GetApplicationDirectory = (rl_get_application_directory)GetProcAddress(DLLHandle, "RL_GetApplicationDirectory");
        Result.ChangeDirectory = (rl_change_directory)GetProcAddress(DLLHandle, "RL_ChangeDirectory");
        Result.IsPathFile = (rl_is_path_file)GetProcAddress(DLLHandle, "RL_IsPathFile");
        Result.LoadDirectoryFiles = (rl_load_directory_files)GetProcAddress(DLLHandle, "RL_LoadDirectoryFiles");
        Result.LoadDirectoryFilesEx = (rl_load_directory_files_ex)GetProcAddress(DLLHandle, "RL_LoadDirectoryFilesEx");
        Result.UnloadDirectoryFiles = (rl_unload_directory_files)GetProcAddress(DLLHandle, "RL_UnloadDirectoryFiles");
        Result.IsFileDropped = (rl_is_file_dropped)GetProcAddress(DLLHandle, "RL_IsFileDropped");
        Result.LoadDroppedFiles = (rl_load_dropped_files)GetProcAddress(DLLHandle, "RL_LoadDroppedFiles");
        Result.UnloadDroppedFiles = (rl_unload_dropped_files)GetProcAddress(DLLHandle, "RL_UnloadDroppedFiles");
        Result.GetFileModTime = (rl_get_file_mod_time)GetProcAddress(DLLHandle, "RL_GetFileModTime");
        Result.CompressData = (rl_compress_data)GetProcAddress(DLLHandle, "RL_CompressData");
        Result.DecompressData = (rl_decompress_data)GetProcAddress(DLLHandle, "RL_DecompressData");
        Result.EncodeDataBase64 = (rl_encode_data_base64)GetProcAddress(DLLHandle, "RL_EncodeDataBase64");
        Result.DecodeDataBase64 = (rl_decode_data_base64)GetProcAddress(DLLHandle, "RL_DecodeDataBase64");
        Result.IsKeyPressed = (rl_is_key_pressed)GetProcAddress(DLLHandle, "RL_IsKeyPressed");
        Result.IsKeyDown = (rl_is_key_down)GetProcAddress(DLLHandle, "RL_IsKeyDown");
        Result.IsKeyReleased = (rl_is_key_released)GetProcAddress(DLLHandle, "RL_IsKeyReleased");
        Result.IsKeyUp = (rl_is_key_up)GetProcAddress(DLLHandle, "RL_IsKeyUp");
        Result.SetExitKey = (rl_set_exit_key)GetProcAddress(DLLHandle, "RL_SetExitKey");
        Result.GetKeyPressed = (rl_get_key_pressed)GetProcAddress(DLLHandle, "RL_GetKeyPressed");
        Result.GetCharPressed = (rl_get_char_pressed)GetProcAddress(DLLHandle, "RL_GetCharPressed");
        Result.IsGamepadAvailable = (rl_is_gamepad_available)GetProcAddress(DLLHandle, "RL_IsGamepadAvailable");
        Result.GetGamepadName = (rl_get_gamepad_name)GetProcAddress(DLLHandle, "RL_GetGamepadName");
        Result.IsGamepadButtonPressed = (rl_is_gamepad_button_pressed)GetProcAddress(DLLHandle, "RL_IsGamepadButtonPressed");
        Result.IsGamepadButtonDown = (rl_is_gamepad_button_down)GetProcAddress(DLLHandle, "RL_IsGamepadButtonDown");
        Result.IsGamepadButtonReleased = (rl_is_gamepad_button_released)GetProcAddress(DLLHandle, "RL_IsGamepadButtonReleased");
        Result.IsGamepadButtonUp = (rl_is_gamepad_button_up)GetProcAddress(DLLHandle, "RL_IsGamepadButtonUp");
        Result.GetGamepadButtonPressed = (rl_get_gamepad_button_pressed)GetProcAddress(DLLHandle, "RL_GetGamepadButtonPressed");
        Result.GetGamepadAxisCount = (rl_get_gamepad_axis_count)GetProcAddress(DLLHandle, "RL_GetGamepadAxisCount");
        Result.GetGamepadAxisMovement = (rl_get_gamepad_axis_movement)GetProcAddress(DLLHandle, "RL_GetGamepadAxisMovement");
        Result.SetGamepadMappings = (rl_set_gamepad_mappings)GetProcAddress(DLLHandle, "RL_SetGamepadMappings");
        Result.IsMouseButtonPressed = (rl_is_mouse_button_pressed)GetProcAddress(DLLHandle, "RL_IsMouseButtonPressed");
        Result.IsMouseButtonDown = (rl_is_mouse_button_down)GetProcAddress(DLLHandle, "RL_IsMouseButtonDown");
        Result.IsMouseButtonReleased = (rl_is_mouse_button_released)GetProcAddress(DLLHandle, "RL_IsMouseButtonReleased");
        Result.IsMouseButtonUp = (rl_is_mouse_button_up)GetProcAddress(DLLHandle, "RL_IsMouseButtonUp");
        Result.GetMouseX = (rl_get_mouse_x)GetProcAddress(DLLHandle, "RL_GetMouseX");
        Result.GetMouseY = (rl_get_mouse_y)GetProcAddress(DLLHandle, "RL_GetMouseY");
        Result.GetMousePosition = (rl_get_mouse_position)GetProcAddress(DLLHandle, "RL_GetMousePosition");
        Result.GetMouseDelta = (rl_get_mouse_delta)GetProcAddress(DLLHandle, "RL_GetMouseDelta");
        Result.SetMousePosition = (rl_set_mouse_position)GetProcAddress(DLLHandle, "RL_SetMousePosition");
        Result.SetMouseOffset = (rl_set_mouse_offset)GetProcAddress(DLLHandle, "RL_SetMouseOffset");
        Result.SetMouseScale = (rl_set_mouse_scale)GetProcAddress(DLLHandle, "RL_SetMouseScale");
        Result.GetMouseWheelMove = (rl_get_mouse_wheel_move)GetProcAddress(DLLHandle, "RL_GetMouseWheelMove");
        Result.GetMouseWheelMoveV = (rl_get_mouse_wheel_move_v)GetProcAddress(DLLHandle, "RL_GetMouseWheelMoveV");
        Result.SetMouseCursor = (rl_set_mouse_cursor)GetProcAddress(DLLHandle, "RL_SetMouseCursor");
        Result.GetTouchX = (rl_get_touch_x)GetProcAddress(DLLHandle, "RL_GetTouchX");
        Result.GetTouchY = (rl_get_touch_y)GetProcAddress(DLLHandle, "RL_GetTouchY");
        Result.GetTouchPosition = (rl_get_touch_position)GetProcAddress(DLLHandle, "RL_GetTouchPosition");
        Result.GetTouchPointId = (rl_get_touch_point_id)GetProcAddress(DLLHandle, "RL_GetTouchPointId");
        Result.GetTouchPointCount = (rl_get_touch_point_count)GetProcAddress(DLLHandle, "RL_GetTouchPointCount");
        Result.SetGesturesEnabled = (rl_set_gestures_enabled)GetProcAddress(DLLHandle, "RL_SetGesturesEnabled");
        Result.IsGestureDetected = (rl_is_gesture_detected)GetProcAddress(DLLHandle, "RL_IsGestureDetected");
        Result.GetGestureDetected = (rl_get_gesture_detected)GetProcAddress(DLLHandle, "RL_GetGestureDetected");
        Result.GetGestureHoldDuration = (rl_get_gesture_hold_duration)GetProcAddress(DLLHandle, "RL_GetGestureHoldDuration");
        Result.GetGestureDragVector = (rl_get_gesture_drag_vector)GetProcAddress(DLLHandle, "RL_GetGestureDragVector");
        Result.GetGestureDragAngle = (rl_get_gesture_drag_angle)GetProcAddress(DLLHandle, "RL_GetGestureDragAngle");
        Result.GetGesturePinchVector = (rl_get_gesture_pinch_vector)GetProcAddress(DLLHandle, "RL_GetGesturePinchVector");
        Result.GetGesturePinchAngle = (rl_get_gesture_pinch_angle)GetProcAddress(DLLHandle, "RL_GetGesturePinchAngle");
        Result.SetCameraMode = (rl_set_camera_mode)GetProcAddress(DLLHandle, "RL_SetCameraMode");
        Result.UpdateCamera = (rl_update_camera)GetProcAddress(DLLHandle, "RL_UpdateCamera");
        Result.SetCameraPanControl = (rl_set_camera_pan_control)GetProcAddress(DLLHandle, "RL_SetCameraPanControl");
        Result.SetCameraAltControl = (rl_set_camera_alt_control)GetProcAddress(DLLHandle, "RL_SetCameraAltControl");
        Result.SetCameraSmoothZoomControl = (rl_set_camera_smooth_zoom_control)GetProcAddress(DLLHandle, "RL_SetCameraSmoothZoomControl");
        Result.SetCameraMoveControls = (rl_set_camera_move_controls)GetProcAddress(DLLHandle, "RL_SetCameraMoveControls");
        Result.SetShapesTexture = (rl_set_shapes_texture)GetProcAddress(DLLHandle, "RL_SetShapesTexture");
        Result.DrawPixel = (rl_draw_pixel)GetProcAddress(DLLHandle, "RL_DrawPixel");
        Result.DrawPixelV = (rl_draw_pixel_v)GetProcAddress(DLLHandle, "RL_DrawPixelV");
        Result.DrawLine = (rl_draw_line)GetProcAddress(DLLHandle, "RL_DrawLine");
        Result.DrawLineV = (rl_draw_line_v)GetProcAddress(DLLHandle, "RL_DrawLineV");
        Result.DrawLineEx = (rl_draw_line_ex)GetProcAddress(DLLHandle, "RL_DrawLineEx");
        Result.DrawLineBezier = (rl_draw_line_bezier)GetProcAddress(DLLHandle, "RL_DrawLineBezier");
        Result.DrawLineBezierQuad = (rl_draw_line_bezier_quad)GetProcAddress(DLLHandle, "RL_DrawLineBezierQuad");
        Result.DrawLineBezierCubic = (rl_draw_line_bezier_cubic)GetProcAddress(DLLHandle, "RL_DrawLineBezierCubic");
        Result.DrawLineStrip = (rl_draw_line_strip)GetProcAddress(DLLHandle, "RL_DrawLineStrip");
        Result.DrawCircle = (rl_draw_circle)GetProcAddress(DLLHandle, "RL_DrawCircle");
        Result.DrawCircleSector = (rl_draw_circle_sector)GetProcAddress(DLLHandle, "RL_DrawCircleSector");
        Result.DrawCircleSectorLines = (rl_draw_circle_sector_lines)GetProcAddress(DLLHandle, "RL_DrawCircleSectorLines");
        Result.DrawCircleGradient = (rl_draw_circle_gradient)GetProcAddress(DLLHandle, "RL_DrawCircleGradient");
        Result.DrawCircleV = (rl_draw_circle_v)GetProcAddress(DLLHandle, "RL_DrawCircleV");
        Result.DrawCircleLines = (rl_draw_circle_lines)GetProcAddress(DLLHandle, "RL_DrawCircleLines");
        Result.DrawEllipse = (rl_draw_ellipse)GetProcAddress(DLLHandle, "RL_DrawEllipse");
        Result.DrawEllipseLines = (rl_draw_ellipse_lines)GetProcAddress(DLLHandle, "RL_DrawEllipseLines");
        Result.DrawRing = (rl_draw_ring)GetProcAddress(DLLHandle, "RL_DrawRing");
        Result.DrawRingLines = (rl_draw_ring_lines)GetProcAddress(DLLHandle, "RL_DrawRingLines");
        Result.DrawRectangle = (rl_draw_rectangle)GetProcAddress(DLLHandle, "RL_DrawRectangle");
        Result.DrawRectangleV = (rl_draw_rectangle_v)GetProcAddress(DLLHandle, "RL_DrawRectangleV");
        Result.DrawRectangleRec = (rl_draw_rectangle_rec)GetProcAddress(DLLHandle, "RL_DrawRectangleRec");
        Result.DrawRectanglePro = (rl_draw_rectangle_pro)GetProcAddress(DLLHandle, "RL_DrawRectanglePro");
        Result.DrawRectangleGradientV = (rl_draw_rectangle_gradient_v)GetProcAddress(DLLHandle, "RL_DrawRectangleGradientV");
        Result.DrawRectangleGradientH = (rl_draw_rectangle_gradident_h)GetProcAddress(DLLHandle, "RL_DrawRectangleGradientH");
        Result.DrawRectangleGradientEx = (rl_draw_rectangle_gradient_ex)GetProcAddress(DLLHandle, "RL_DrawRectangleGradientEx");
        Result.DrawRectangleLines = (rl_draw_rectangle_lines)GetProcAddress(DLLHandle, "RL_DrawRectangleLines");
        Result.DrawRectangleLinesEx = (rl_draw_rectangle_lines_ex)GetProcAddress(DLLHandle, "RL_DrawRectangleLinesEx");
        Result.DrawRectangleRounded = (rl_draw_rectange_rounded)GetProcAddress(DLLHandle, "RL_DrawRectangleRounded");
        Result.DrawRectangleRoundedLines = (rl_draw_rectangle_bounded_lines)GetProcAddress(DLLHandle, "RL_DrawRectangleRoundedLines");
        Result.DrawTriangle = (rl_draw_triangle)GetProcAddress(DLLHandle, "RL_DrawTriangle");
        Result.DrawTriangleRotated = (draw_triangle_rotated)GetProcAddress(DLLHandle, "DrawTriangleRotated");
        Result.DrawTriangleLines = (rl_draw_triangle_lines)GetProcAddress(DLLHandle, "RL_DrawTriangleLines");
        Result.DrawTriangleLinesRotated = (draw_triangle_lines_rotated)GetProcAddress(DLLHandle, "DrawTriangleLinesRotated");
        Result.DrawTriangleFan = (rl_draw_triangle_fan)GetProcAddress(DLLHandle, "RL_DrawTriangleFan");
        Result.DrawTriangleStrip = (rl_draw_triangle_strip)GetProcAddress(DLLHandle, "RL_DrawTriangleStrip");
        Result.DrawPolygon = (draw_polygon)GetProcAddress(DLLHandle, "DrawPolygon");
        Result.DrawPoly = (rl_draw_poly)GetProcAddress(DLLHandle, "RL_DrawPoly");
        Result.DrawPolyLines = (rl_draw_poly_lines)GetProcAddress(DLLHandle, "RL_DrawPolyLines");
        Result.DrawPolyLinesEx = (rl_draw_poly_lines_ex)GetProcAddress(DLLHandle, "RL_DrawPolyLinesEx");
        Result.CheckCollisionRecs = (rl_check_collision_recs)GetProcAddress(DLLHandle, "RL_CheckCollisionRecs");
        Result.CheckCollisionCircles = (rl_check_collision_circles)GetProcAddress(DLLHandle, "RL_CheckCollisionCircles");
        Result.CheckCollisionCircleRec = (rl_check_collision_circle_rec)GetProcAddress(DLLHandle, "RL_CheckCollisionCircleRec");
        Result.CheckCollisionPointRec = (rl_check_collision_point_rec)GetProcAddress(DLLHandle, "RL_CheckCollisionPointRec");
        Result.CheckCollisionPointCircle = (rl_check_collision_point_circle)GetProcAddress(DLLHandle, "RL_CheckCollisionPointCircle");
        Result.CheckCollisionPointTriangle = (rl_check_collision_point_triangle)GetProcAddress(DLLHandle, "RL_CheckCollisionPointTriangle");
        Result.CheckCollisionLines = (rl_check_collision_lines)GetProcAddress(DLLHandle, "RL_CheckCollisionLines");
        Result.CheckCollisionPointLine = (rl_check_collision_point_line)GetProcAddress(DLLHandle, "RL_CheckCollisionPointLine");
        Result.GetCollisionRec = (rl_get_collision_rec)GetProcAddress(DLLHandle, "RL_GetCollisionRec");
        Result.RL_LoadImage = (rl_load_image)GetProcAddress(DLLHandle, "RL_LoadImage");
        Result.LoadImageRaw = (rl_load_image_raw)GetProcAddress(DLLHandle, "RL_LoadImageRaw");
        Result.LoadImageAnim = (rl_load_image_anim)GetProcAddress(DLLHandle, "RL_LoadImageAnim");
        Result.LoadImageFromMemory = (rl_load_image_from_memory)GetProcAddress(DLLHandle, "RL_LoadImageFromMemory");
        Result.LoadImageFromTexture = (rl_load_image_from_texture)GetProcAddress(DLLHandle, "RL_LoadImageFromTexture");
        Result.LoadImageFromScreen = (rl_load_image_from_screen)GetProcAddress(DLLHandle, "RL_LoadImageFromScreen");
        Result.UnloadImage = (rl_unload_image)GetProcAddress(DLLHandle, "RL_UnloadImage");
        Result.ExportImage = (rl_export_image)GetProcAddress(DLLHandle, "RL_ExportImage");
        Result.ExportImageAsCode = (rl_export_image_as_code)GetProcAddress(DLLHandle, "RL_ExportImageAsCode");
        Result.GenImageColor = (rl_gen_image_color)GetProcAddress(DLLHandle, "RL_GenImageColor");
        Result.GenImageGradientV = (rl_gen_image_gradient_v)GetProcAddress(DLLHandle, "RL_GenImageGradientV");
        Result.GenImageGradientH = (rl_gen_image_gradient_h)GetProcAddress(DLLHandle, "RL_GenImageGradientH");
        Result.GenImageGradientRadial = (rl_gen_image_gradient_radial)GetProcAddress(DLLHandle, "RL_GenImageGradientRadial");
        Result.GenImageChecked = (rl_gen_image_checked)GetProcAddress(DLLHandle, "RL_GenImageChecked");
        Result.GenImageWhiteNoise = (rl_gen_image_white_noise)GetProcAddress(DLLHandle, "RL_GenImageWhiteNoise");
        Result.GenImageCellular = (rl_gen_image_cellular)GetProcAddress(DLLHandle, "RL_GenImageCellular");
        Result.ImageCopy = (rl_image_copy)GetProcAddress(DLLHandle, "RL_ImageCopy");
        Result.ImageFromImage = (rl_image_from_image)GetProcAddress(DLLHandle, "RL_ImageFromImage");
        Result.ImageText = (rl_image_text)GetProcAddress(DLLHandle, "RL_ImageText");
        Result.ImageTextEx = (rl_image_text_ex)GetProcAddress(DLLHandle, "RL_ImageTextEx");
        Result.ImageFormat = (rl_image_format)GetProcAddress(DLLHandle, "RL_ImageFormat");
        Result.ImageToPOT = (rl_image_to_pot)GetProcAddress(DLLHandle, "RL_ImageToPOT");
        Result.ImageCrop = (rl_image_crop)GetProcAddress(DLLHandle, "RL_ImageCrop");
        Result.ImageAlphaCrop = (rl_image_alpha_crop)GetProcAddress(DLLHandle, "RL_ImageAlphaCrop");
        Result.ImageAlphaClear = (rl_image_alpha_clear)GetProcAddress(DLLHandle, "RL_ImageAlphaClear");
        Result.ImageAlphaMask = (rl_image_alpha_mask)GetProcAddress(DLLHandle, "RL_ImageAlphaMask");
        Result.ImageAlphaPremultiply = (rl_image_alpha_premultiply)GetProcAddress(DLLHandle, "RL_ImageAlphaPremultiply");
        Result.ImageResize = (rl_image_resize)GetProcAddress(DLLHandle, "RL_ImageResize");
        Result.ImageResizeNN = (rl_image_resize_nn)GetProcAddress(DLLHandle, "RL_ImageResizeNN");
        Result.ImageResizeCanvas = (rl_image_resize_canvas)GetProcAddress(DLLHandle, "RL_ImageResizeCanvas");
        Result.ImageMipmaps = (rl_image_mipmaps)GetProcAddress(DLLHandle, "RL_ImageMipmaps");
        Result.ImageDither = (rl_image_dither)GetProcAddress(DLLHandle, "RL_ImageDither");
        Result.ImageFlipVertical = (rl_image_flip_vertical)GetProcAddress(DLLHandle, "RL_ImageFlipVertical");
        Result.ImageFlipHorizontal = (rl_image_flip_horizontal)GetProcAddress(DLLHandle, "RL_ImageFlipHorizontal");
        Result.ImageRotateCW = (rl_image_rotate_cw)GetProcAddress(DLLHandle, "RL_ImageRotateCW");
        Result.ImageRotateCCW = (rl_image_rotate_ccw)GetProcAddress(DLLHandle, "RL_ImageRotateCCW");
        Result.ImageColorTint = (rl_image_color_tint)GetProcAddress(DLLHandle, "RL_ImageColorTint");
        Result.ImageColorInvert = (rl_image_color_invert)GetProcAddress(DLLHandle, "RL_ImageColorInvert");
        Result.ImageColorGrayscale = (rl_image_color_grayscale)GetProcAddress(DLLHandle, "RL_ImageColorGrayscale");
        Result.ImageColorContrast = (rl_image_color_contrast)GetProcAddress(DLLHandle, "RL_ImageColorContrast");
        Result.ImageColorBrightness = (rl_image_color_brightness)GetProcAddress(DLLHandle, "RL_ImageColorBrightness");
        Result.ImageColorReplace = (rl_image_color_replace)GetProcAddress(DLLHandle, "RL_ImageColorReplace");
        Result.LoadImageColors = (rl_load_image_colors)GetProcAddress(DLLHandle, "RL_LoadImageColors");
        Result.LoadImagePalette = (rl_load_image_palette)GetProcAddress(DLLHandle, "RL_LoadImagePalette");
        Result.UnloadImageColors = (rl_unload_image_colors)GetProcAddress(DLLHandle, "RL_UnloadImageColors");
        Result.UnloadImagePalette = (rl_unload_image_palette)GetProcAddress(DLLHandle, "RL_UnloadImagePalette");
        Result.GetImageAlphaBorder = (rl_get_image_alpha_border)GetProcAddress(DLLHandle, "RL_GetImageAlphaBorder");
        Result.GetImageColor = (rl_get_image_color)GetProcAddress(DLLHandle, "RL_GetImageColor");
        Result.ImageClearBackground = (rl_image_clear_background)GetProcAddress(DLLHandle, "RL_ImageClearBackground");
        Result.ImageDrawPixel = (rl_image_draw_pixel)GetProcAddress(DLLHandle, "RL_ImageDrawPixel");
        Result.ImageDrawPixelV = (rl_image_draw_pixel_v)GetProcAddress(DLLHandle, "RL_ImageDrawPixelV");
        Result.ImageDrawLine = (rl_image_draw_line)GetProcAddress(DLLHandle, "RL_ImageDrawLine");
        Result.ImageDrawLineV = (rl_image_draw_line_v)GetProcAddress(DLLHandle, "RL_ImageDrawLineV");
        Result.ImageDrawCircle = (rl_image_draw_circle)GetProcAddress(DLLHandle, "RL_ImageDrawCircle");
        Result.ImageDrawCircleV = (rl_image_draw_circle_v)GetProcAddress(DLLHandle, "RL_ImageDrawCircleV");
        Result.ImageDrawRectangle = (rl_image_draw_rec)GetProcAddress(DLLHandle, "RL_ImageDrawRectangle");
        Result.ImageDrawRectangleV = (rl_image_draw_rec_v)GetProcAddress(DLLHandle, "RL_ImageDrawRectangleV");
        Result.ImageDrawRectangleRec = (rl_image_draw_rec_rec)GetProcAddress(DLLHandle, "RL_ImageDrawRectangleRec");
        Result.ImageDrawRectangleLines = (rl_image_draw_rec_lines)GetProcAddress(DLLHandle, "RL_ImageDrawRectangleLines");
        Result.ImageDraw = (rl_image_draw)GetProcAddress(DLLHandle, "RL_ImageDraw");
        Result.ImageDrawText = (rl_image_draw_text)GetProcAddress(DLLHandle, "RL_ImageDrawText");
        Result.ImageDrawTextEx = (rl_image_draw_text_ex)GetProcAddress(DLLHandle, "RL_ImageDrawTextEx");
        Result.LoadTexture = (rl_load_texture)GetProcAddress(DLLHandle, "RL_LoadTexture");
        Result.LoadTextureFromImage = (rl_load_texture_from_image)GetProcAddress(DLLHandle, "RL_LoadTextureFromImage");
        Result.LoadTextureCubemap = (rl_load_texture_cubemap)GetProcAddress(DLLHandle, "RL_LoadTextureCubemap");
        Result.LoadRenderTexture = (rl_load_render_texture)GetProcAddress(DLLHandle, "RL_LoadRenderTexture");
        Result.UnloadTexture = (rl_unload_texture)GetProcAddress(DLLHandle, "RL_UnloadTexture");
        Result.UnloadRenderTexture = (rl_unload_render_texture)GetProcAddress(DLLHandle, "RL_UnloadRenderTexture");
        Result.UpdateTexture = (rl_update_texture)GetProcAddress(DLLHandle, "RL_UpdateTexture");
        Result.UpdateTextureRec = (rl_update_texture_rec)GetProcAddress(DLLHandle, "RL_UpdateTextureRec");
        Result.GenTextureMipmaps = (rl_gen_texture_mipmaps)GetProcAddress(DLLHandle, "RL_GenTextureMipmaps");
        Result.SetTextureFilter = (rl_set_texture_filter)GetProcAddress(DLLHandle, "RL_SetTextureFilter");
        Result.SetTextureWrap = (rl_set_texture_wrap)GetProcAddress(DLLHandle, "RL_SetTextureWrap");
        Result.DrawRenderTexture = (draw_render_texture)GetProcAddress(DLLHandle, "DrawRenderTexture");
        Result.DrawTexture = (rl_draw_texture)GetProcAddress(DLLHandle, "RL_DrawTexture");
        Result.DrawTextureV = (rl_draw_texture_v)GetProcAddress(DLLHandle, "RL_DrawTextureV");
        Result.DrawTextureEx = (rl_draw_texture_ex)GetProcAddress(DLLHandle, "RL_DrawTextureEx");
        Result.DrawTextureRotatedScaled = (draw_texture_rotated_scaled)GetProcAddress(DLLHandle, "DrawTextureRotatedScaled");
        Result.DrawTextureRotated = (draw_texture_rotated)GetProcAddress(DLLHandle, "DrawTextureRotated");
        Result.DrawTextureRec = (rl_draw_texture_rec)GetProcAddress(DLLHandle, "RL_DrawTextureRec");
        Result.DrawTextureQuad = (rl_draw_texture_quad)GetProcAddress(DLLHandle, "RL_DrawTextureQuad");
        Result.DrawTextureTiled = (rl_draw_texture_tiled)GetProcAddress(DLLHandle, "RL_DrawTextureTiled");
        Result.DrawTexturePro = (rl_draw_texture_pro)GetProcAddress(DLLHandle, "RL_DrawTexturePro");
        Result.DrawTextureNPatch = (rl_draw_texture_n_patch)GetProcAddress(DLLHandle, "RL_DrawTextureNPatch");
        Result.DrawTexturePoly = (rl_draw_texture_poly)GetProcAddress(DLLHandle, "RL_DrawTexturePoly");
        Result.Fade = (rl_fade)GetProcAddress(DLLHandle, "RL_Fade");
        Result.ColorToInt = (rl_color_to_int)GetProcAddress(DLLHandle, "RL_ColorToInt");
        Result.ColorNormalize = (rl_color_normalize)GetProcAddress(DLLHandle, "RL_ColorNormalize");
        Result.ColorFromNormalized = (rl_color_from_normalized)GetProcAddress(DLLHandle, "RL_ColorFromNormalized");
        Result.ColorToHSV = (rl_color_to_hsv)GetProcAddress(DLLHandle, "RL_ColorToHSV");
        Result.ColorFromHSV = (rl_color_from_hsv)GetProcAddress(DLLHandle, "RL_ColorFromHSV");
        Result.ColorAlpha = (rl_color_alpha)GetProcAddress(DLLHandle, "RL_ColorAlpha");
        Result.ColorAlphaBlend = (rl_color_alpha_blend)GetProcAddress(DLLHandle, "RL_ColorAlphaBlend");
        Result.GetColor = (rl_get_color)GetProcAddress(DLLHandle, "RL_GetColor");
        Result.GetPixelColor = (rl_get_pixel_color)GetProcAddress(DLLHandle, "RL_GetPixelColor");
        Result.SetPixelColor = (rl_set_pixel_color)GetProcAddress(DLLHandle, "RL_SetPixelColor");
        Result.GetPixelDataSize = (rl_get_pixel_data_size)GetProcAddress(DLLHandle, "RL_GetPixelDataSize");
        Result.GetFontDefault = (rl_get_font_default)GetProcAddress(DLLHandle, "RL_GetFontDefault");
        Result.LoadFont = (rl_load_font)GetProcAddress(DLLHandle, "RL_LoadFont");
        Result.LoadFontEx = (rl_load_font_ex)GetProcAddress(DLLHandle, "RL_LoadFontEx");
        Result.LoadFontFromImage = (rl_load_font_from_image)GetProcAddress(DLLHandle, "RL_LoadFontFromImage");
        Result.LoadFontFromMemory = (rl_load_font_from_memory)GetProcAddress(DLLHandle, "RL_LoadFontFromMemory");
        Result.LoadFontData = (rl_load_font_data)GetProcAddress(DLLHandle, "RL_LoadFontData");
        Result.GenImageFontAtlas = (rl_gen_image_font_atlas)GetProcAddress(DLLHandle, "RL_GenImageFontAtlas");
        Result.UnloadFontData = (rl_unload_font_data)GetProcAddress(DLLHandle, "RL_UnloadFontData");
        Result.UnloadFont = (rl_unload_font)GetProcAddress(DLLHandle, "RL_UnloadFont");
        Result.ExportFontAsCode = (rl_export_font_as_code)GetProcAddress(DLLHandle, "RL_ExportFontAsCode");
        Result.DrawFPS = (rl_draw_fps)GetProcAddress(DLLHandle, "RL_DrawFPS");
        Result.RL_DrawText = (rl_draw_text)GetProcAddress(DLLHandle, "RL_DrawText");
        Result.RL_DrawTextEx = (rl_draw_text_ex)GetProcAddress(DLLHandle, "RL_DrawTextEx");
        Result.DrawTextPro = (rl_draw_text_pro)GetProcAddress(DLLHandle, "RL_DrawTextPro");
        Result.DrawTextCodepoint = (rl_draw_text_codepoint)GetProcAddress(DLLHandle, "RL_DrawTextCodepoint");
        Result.DrawTextCodepoints = (rl_draw_text_codepoints)GetProcAddress(DLLHandle, "RL_DrawTextCodepoints");
        Result.MeasureText = (rl_measure_text)GetProcAddress(DLLHandle, "RL_MeasureText");
        Result.MeasureTextEx = (rl_measure_text_ex)GetProcAddress(DLLHandle, "RL_MeasureTextEx");
        Result.GetGlyphIndex = (rl_get_glyph_index)GetProcAddress(DLLHandle, "RL_GetGlyphIndex");
        Result.GetGlyphInfo = (rl_get_glyph_info)GetProcAddress(DLLHandle, "RL_GetGlyphInfo");
        Result.GetGlyphAtlasRec = (rl_get_glyph_atlas_rec)GetProcAddress(DLLHandle, "RL_GetGlyphAtlasRec");
        Result.LoadCodepoints = (rl_load_codepoints)GetProcAddress(DLLHandle, "RL_LoadCodepoints");
        Result.UnloadCodepoints = (rl_unload_codepoints)GetProcAddress(DLLHandle, "RL_UnloadCodepoints");
        Result.GetCodepointCount = (rl_get_codepoint_count)GetProcAddress(DLLHandle, "RL_GetCodepointCount");
        Result.GetCodepoint = (rl_get_codepoint)GetProcAddress(DLLHandle, "RL_GetCodepoint");
        Result.CodepointToUTF8 = (rl_codepoint_to_utf8)GetProcAddress(DLLHandle, "RL_CodepointToUTF8");
        Result.TextCodepointsToUTF8 = (rl_text_codepoints_to_utf8)GetProcAddress(DLLHandle, "RL_TextCodepointsToUTF8");
        Result.TextCopy = (rl_text_copy)GetProcAddress(DLLHandle, "RL_TextCopy");
        Result.TextIsEqual = (rl_text_is_equal)GetProcAddress(DLLHandle, "RL_TextIsEqual");
        Result.TextLength = (rl_text_length)GetProcAddress(DLLHandle, "RL_TextLength");
        Result.TextSubtext = (rl_text_subtext)GetProcAddress(DLLHandle, "RL_TextSubtext");
        Result.TextReplace = (rl_text_replace)GetProcAddress(DLLHandle, "RL_TextReplace");
        Result.TextInsert = (rl_text_insert)GetProcAddress(DLLHandle, "RL_TextInsert");
        Result.TextJoin = (rl_text_join)GetProcAddress(DLLHandle, "RL_TextJoin");
        Result.TextSplit = (rl_text_split)GetProcAddress(DLLHandle, "RL_TextSplit");
        Result.TextAppend = (rl_text_append)GetProcAddress(DLLHandle, "RL_TextAppend");
        Result.TextFindIndex = (rl_text_find_index)GetProcAddress(DLLHandle, "RL_TextFindIndex");
        Result.TextToUpper = (rl_text_to_upper)GetProcAddress(DLLHandle, "RL_TextToUpper");
        Result.TextToLower = (rl_text_to_lower)GetProcAddress(DLLHandle, "RL_TextToLower");
        Result.TextToPascal = (rl_text_to_pascal)GetProcAddress(DLLHandle, "RL_TextToPascal");
        Result.TextToInteger = (rl_text_to_integer)GetProcAddress(DLLHandle, "RL_TextToInteger");
        Result.DrawLine3D = (rl_draw_line_3d)GetProcAddress(DLLHandle, "RL_DrawLine3D");
        Result.DrawPoint3D = (rl_draw_point_3d)GetProcAddress(DLLHandle, "RL_DrawPoint3D");
        Result.DrawCircle3D = (rl_draw_circle_3d)GetProcAddress(DLLHandle, "RL_DrawCircle3D");
        Result.DrawTriangle3D = (rl_draw_triangle_3d)GetProcAddress(DLLHandle, "RL_DrawTriangle3D");
        Result.DrawTriangleStrip3D = (rl_draw_triangle_strip_3d)GetProcAddress(DLLHandle, "RL_DrawTriangleStrip3D");
        Result.DrawCube = (rl_draw_cube)GetProcAddress(DLLHandle, "RL_DrawCube");
        Result.DrawCubeV = (rl_draw_cube_v)GetProcAddress(DLLHandle, "RL_DrawCubeV");
        Result.DrawCubeWires = (rl_draw_cube_wires)GetProcAddress(DLLHandle, "RL_DrawCubeWires");
        Result.DrawCubeWiresV = (rl_draw_cube_wires_v)GetProcAddress(DLLHandle, "RL_DrawCubeWiresV");
        Result.DrawCubeTexture = (rl_draw_cube_texture)GetProcAddress(DLLHandle, "RL_DrawCubeTexture");
        Result.DrawCubeTextureRec = (rl_draw_cube_texture_rec)GetProcAddress(DLLHandle, "RL_DrawCubeTextureRec");
        Result.DrawSphere = (rl_draw_sphere)GetProcAddress(DLLHandle, "RL_DrawSphere");
        Result.DrawSphereEx = (rl_draw_sphere_ex)GetProcAddress(DLLHandle, "RL_DrawSphereEx");
        Result.DrawSphereWires = (rl_draw_sphere_wires)GetProcAddress(DLLHandle, "RL_DrawSphereWires");
        Result.DrawCylinder = (rl_draw_cylinder)GetProcAddress(DLLHandle, "RL_DrawCylinder");
        Result.DrawCylinderEx = (rl_draw_cylinder_ex)GetProcAddress(DLLHandle, "RL_DrawCylinderEx");
        Result.DrawCylinderWires = (rl_draw_cylinder_wires)GetProcAddress(DLLHandle, "RL_DrawCylinderWires");
        Result.DrawCylinderWiresEx = (rl_draw_cylinder_wires_ex)GetProcAddress(DLLHandle, "RL_DrawCylinderWiresEx");
        Result.DrawPlane = (rl_draw_plane)GetProcAddress(DLLHandle, "RL_DrawPlane");
        Result.DrawRay = (rl_draw_ray)GetProcAddress(DLLHandle, "RL_DrawRay");
        Result.DrawGrid = (rl_draw_grid)GetProcAddress(DLLHandle, "RL_DrawGrid");
        Result.LoadModel = (rl_load_model)GetProcAddress(DLLHandle, "RL_LoadModel");
        Result.LoadModelFromMesh = (rl_load_model_from_mesh)GetProcAddress(DLLHandle, "RL_LoadModelFromMesh");
        Result.UnloadModel = (rl_unload_model)GetProcAddress(DLLHandle, "RL_UnloadModel");
        Result.UnloadModelKeepMeshes = (rl_unload_model_keep_meshes)GetProcAddress(DLLHandle, "RL_UnloadModelKeepMeshes");
        Result.GetModelBoundingBox = (rl_get_model_bounding_box)GetProcAddress(DLLHandle, "RL_GetModelBoundingBox");
        Result.DrawModel = (rl_draw_model)GetProcAddress(DLLHandle, "RL_DrawModel");
        Result.DrawModelEx = (rl_draw_model_ex)GetProcAddress(DLLHandle, "RL_DrawModelEx");
        Result.DrawModelWires = (rl_draw_model_wires)GetProcAddress(DLLHandle, "RL_DrawModelWires");
        Result.DrawModelWiresEx = (rl_draw_model_wires_ex)GetProcAddress(DLLHandle, "RL_DrawModelWiresEx");
        Result.DrawBoundingBox = (rl_draw_bounding_box)GetProcAddress(DLLHandle, "RL_DrawBoundingBox");
        Result.DrawBillboard = (rl_draw_billboard)GetProcAddress(DLLHandle, "RL_DrawBillboard");
        Result.DrawBillboardRec = (rl_draw_billboard_rec)GetProcAddress(DLLHandle, "RL_DrawBillboardRec");
        Result.DrawBillboardPro = (rl_draw_billboard_pro)GetProcAddress(DLLHandle, "RL_DrawBillboardPro");
        Result.UploadMesh = (rl_upload_mesh)GetProcAddress(DLLHandle, "RL_UploadMesh");
        Result.UpdateMeshBuffer = (rl_update_mesh_buffer)GetProcAddress(DLLHandle, "RL_UpdateMeshBuffer");
        Result.UnloadMesh = (rl_unload_mesh)GetProcAddress(DLLHandle, "RL_UnloadMesh");
        Result.DrawMesh = (rl_draw_mesh)GetProcAddress(DLLHandle, "RL_DrawMesh");
        Result.DrawMeshInstanced = (rl_draw_mesh_instanced)GetProcAddress(DLLHandle, "RL_DrawMeshInstanced");
        Result.ExportMesh = (rl_export_mesh)GetProcAddress(DLLHandle, "RL_ExportMesh");
        Result.GetMeshBoundingBox = (rl_get_mesh_bounding_box)GetProcAddress(DLLHandle, "RL_GetMeshBoundingBox");
        Result.GenMeshTangents = (rl_get_mesh_tangents)GetProcAddress(DLLHandle, "RL_GenMeshTangents");
        Result.GenMeshPoly = (rl_gen_mesh_poly)GetProcAddress(DLLHandle, "RL_GenMeshPoly");
        Result.GenMeshPlane = (rl_get_mesh_plane)GetProcAddress(DLLHandle, "RL_GenMeshPlane");
        Result.GenMeshCube = (rl_gen_mesh_cube)GetProcAddress(DLLHandle, "RL_GenMeshCube");
        Result.GenMeshSphere = (rl_mesh_sphere)GetProcAddress(DLLHandle, "RL_GenMeshSphere");
        Result.GenMeshHemiSphere = (rl_gen_mesh_hemi_sphere)GetProcAddress(DLLHandle, "RL_GenMeshHemiSphere");
        Result.GenMeshCylinder = (rl_gen_mesh_cylinder)GetProcAddress(DLLHandle, "RL_GenMeshCylinder");
        Result.GenMeshCone = (rl_gen_mesh_cone)GetProcAddress(DLLHandle, "RL_GenMeshCone");
        Result.GenMeshTorus = (rl_gen_mesh_torus)GetProcAddress(DLLHandle, "RL_GenMeshTorus");
        Result.GenMeshKnot = (rl_gen_mesh_knot)GetProcAddress(DLLHandle, "RL_GenMeshKnot");
        Result.GenMeshHeightmap = (rl_gen_mesh_heightmap)GetProcAddress(DLLHandle, "RL_GenMeshHeightmap");
        Result.GenMeshCubicmap = (rl_gen_mesh_cubicmap)GetProcAddress(DLLHandle, "RL_GenMeshCubicmap");
        Result.LoadMaterials = (rl_load_materials)GetProcAddress(DLLHandle, "RL_LoadMaterials");
        Result.LoadMaterialDefault = (rl_load_material_default)GetProcAddress(DLLHandle, "RL_LoadMaterialDefault");
        Result.UnloadMaterial = (rl_unload_material)GetProcAddress(DLLHandle, "RL_UnloadMaterial");
        Result.SetMaterialTexture = (rl_set_material_texture)GetProcAddress(DLLHandle, "RL_SetMaterialTexture");
        Result.SetModelMeshMaterial = (rl_set_model_mesh_material)GetProcAddress(DLLHandle, "RL_SetModelMeshMaterial");
        Result.LoadModelAnimations = (rl_load_model_animations)GetProcAddress(DLLHandle, "RL_LoadModelAnimations");
        Result.UpdateModelAnimation = (rl_update_model_animation)GetProcAddress(DLLHandle, "RL_UpdateModelAnimation");
        Result.UnloadModelAnimation = (rl_unload_model_animation)GetProcAddress(DLLHandle, "RL_UnloadModelAnimation");
        Result.UnloadModelAnimations = (rl_unload_model_animations)GetProcAddress(DLLHandle, "RL_UnloadModelAnimations");
        Result.IsModelAnimationValid = (rl_is_model_animation_valid)GetProcAddress(DLLHandle, "RL_IsModelAnimationValid");
        Result.CheckCollisionSpheres = (rl_check_collision_spheres)GetProcAddress(DLLHandle, "RL_CheckCollisionSpheres");
        Result.CheckCollisionBoxes = (rl_check_collision_boxes)GetProcAddress(DLLHandle, "RL_CheckCollisionBoxes");
        Result.CheckCollisionBoxSphere = (rl_check_collision_box_sphere)GetProcAddress(DLLHandle, "RL_CheckCollisionBoxSphere");
        Result.GetRayCollisionSphere = (rl_get_ray_collision_sphere)GetProcAddress(DLLHandle, "RL_GetRayCollisionSphere");
        Result.GetRayCollisionBox = (rl_get_ray_collision_box)GetProcAddress(DLLHandle, "RL_GetRayCollisionBox");
        Result.GetRayCollisionMesh = (rl_get_ray_collision_mesh)GetProcAddress(DLLHandle, "RL_GetRayCollisionMesh");
        Result.GetRayCollisionTriangle = (rl_get_ray_collision_triangle)GetProcAddress(DLLHandle, "RL_GetRayCollisionTriangle");
        Result.GetRayCollisionQuad = (rl_get_ray_collision_quad)GetProcAddress(DLLHandle, "RL_GetRayCollisionQuad");
        Result.InitAudioDevice = (rl_init_audio_device)GetProcAddress(DLLHandle, "RL_InitAudioDevice");
        Result.CloseAudioDevice = (rl_close_audio_device)GetProcAddress(DLLHandle, "RL_CloseAudioDevice");
        Result.IsAudioDeviceReady = (rl_is_audio_device_ready)GetProcAddress(DLLHandle, "RL_IsAudioDeviceReady");
        Result.SetMasterVolume = (rl_set_master_volume)GetProcAddress(DLLHandle, "RL_SetMasterVolume");
        Result.LoadWave = (rl_load_wave)GetProcAddress(DLLHandle, "RL_LoadWave");
        Result.LoadWaveFromMemory = (rl_load_wave_from_memory)GetProcAddress(DLLHandle, "RL_LoadWaveFromMemory");
        Result.LoadSound = (rl_load_sound)GetProcAddress(DLLHandle, "RL_LoadSound");
        Result.LoadSoundFromWave = (rl_load_sound_from_wave)GetProcAddress(DLLHandle, "RL_LoadSoundFromWave");
        Result.UpdateSound = (rl_update_sound)GetProcAddress(DLLHandle, "RL_UpdateSound");
        Result.UnloadWave = (rl_unload_wave)GetProcAddress(DLLHandle, "RL_UnloadWave");
        Result.UnloadSound = (rl_unload_sound)GetProcAddress(DLLHandle, "RL_UnloadSound");
        Result.ExportWave = (rl_export_wave)GetProcAddress(DLLHandle, "RL_ExportWave");
        Result.ExportWaveAsCode = (rl_export_wave_as_code)GetProcAddress(DLLHandle, "RL_ExportWaveAsCode");
        Result.RL_PlaySound = (rl_play_sound)GetProcAddress(DLLHandle, "RL_PlaySound");
        Result.StopSound = (rl_stop_sound)GetProcAddress(DLLHandle, "RL_StopSound");
        Result.PauseSound = (rl_pause_sound)GetProcAddress(DLLHandle, "RL_PauseSound");
        Result.ResumeSound = (rl_resume_sound)GetProcAddress(DLLHandle, "RL_ResumeSound");
        Result.PlaySoundMulti = (rl_play_sound_multi)GetProcAddress(DLLHandle, "RL_PlaySoundMulti");
        Result.StopSoundMulti = (rl_stop_sound_multi)GetProcAddress(DLLHandle, "RL_StopSoundMulti");
        Result.GetSoundsPlaying = (rl_get_sounds_playing)GetProcAddress(DLLHandle, "RL_GetSoundsPlaying");
        Result.IsSoundPlaying = (rl_is_sound_playing)GetProcAddress(DLLHandle, "RL_IsSoundPlaying");
        Result.SetSoundVolume = (rl_set_sound_volume)GetProcAddress(DLLHandle, "RL_SetSoundVolume");
        Result.SetSoundPitch = (rl_set_sound_pitch)GetProcAddress(DLLHandle, "RL_SetSoundPitch");
        Result.SetSoundPan = (rl_set_sound_pan)GetProcAddress(DLLHandle, "RL_SetSoundPan");
        Result.WaveCopy = (rl_wave_copy)GetProcAddress(DLLHandle, "RL_WaveCopy");
        Result.WaveCrop = (rl_wave_crop)GetProcAddress(DLLHandle, "RL_WaveCrop");
        Result.WaveFormat = (rl_wave_format)GetProcAddress(DLLHandle, "RL_WaveFormat");
        Result.LoadWaveSamples = (rl_load_wave_samples)GetProcAddress(DLLHandle, "RL_LoadWaveSamples");
        Result.UnloadWaveSamples = (rl_unload_wave_samples)GetProcAddress(DLLHandle, "RL_UnloadWaveSamples");
        Result.LoadMusicStream = (rl_load_music_stream)GetProcAddress(DLLHandle, "RL_LoadMusicStream");
        Result.LoadMusicStreamFromMemory = (rl_load_music_stream_from_memory)GetProcAddress(DLLHandle, "RL_LoadMusicStreamFromMemory");
        Result.UnloadMusicStream = (rl_unload_music_stream)GetProcAddress(DLLHandle, "RL_UnloadMusicStream");
        Result.PlayMusicStream = (rl_play_music_stream)GetProcAddress(DLLHandle, "RL_PlayMusicStream");
        Result.IsMusicStreamPlaying = (rl_is_music_stream_playing)GetProcAddress(DLLHandle, "RL_IsMusicStreamPlaying");
        Result.UpdateMusicStream = (rl_update_music_stream)GetProcAddress(DLLHandle, "RL_UpdateMusicStream");
        Result.StopMusicStream = (rl_stop_music_stream)GetProcAddress(DLLHandle, "RL_StopMusicStream");
        Result.PauseMusicStream = (rl_pause_music_stream)GetProcAddress(DLLHandle, "RL_PauseMusicStream");
        Result.ResumeMusicStream = (rl_resume_music_stream)GetProcAddress(DLLHandle, "RL_ResumeMusicStream");
        Result.SeekMusicStream = (rl_seek_music_stream)GetProcAddress(DLLHandle, "RL_SeekMusicStream");
        Result.SetMusicVolume = (rl_set_music_volume)GetProcAddress(DLLHandle, "RL_SetMusicVolume");
        Result.SetMusicPitch = (rl_set_music_pitch)GetProcAddress(DLLHandle, "RL_SetMusicPitch");
        Result.SetMusicPan = (rl_set_music_pan)GetProcAddress(DLLHandle, "RL_SetMusicPan");
        Result.GetMusicTimeLength = (rl_get_music_time_length)GetProcAddress(DLLHandle, "RL_GetMusicTimeLength");
        Result.GetMusicTimePlayed = (rl_get_music_time_played)GetProcAddress(DLLHandle, "RL_GetMusicTimePlayed");
        Result.LoadAudioStream = (rl_load_audio_stream)GetProcAddress(DLLHandle, "RL_LoadAudioStream");
        Result.UnloadAudioStream = (rl_unload_audio_stream)GetProcAddress(DLLHandle, "RL_UnloadAudioStream");
        Result.UpdateAudioStream = (rl_update_audio_stream)GetProcAddress(DLLHandle, "RL_UpdateAudioStream");
        Result.IsAudioStreamProcessed = (rl_is_audio_stream_processed)GetProcAddress(DLLHandle, "RL_IsAudioStreamProcessed");
        Result.PlayAudioStream = (rl_play_audio_stream)GetProcAddress(DLLHandle, "RL_PlayAudioStream");
        Result.PauseAudioStream = (rl_pause_audio_stream)GetProcAddress(DLLHandle, "RL_PauseAudioStream");
        Result.ResumeAudioStream = (rl_resume_audio_stream)GetProcAddress(DLLHandle, "RL_ResumeAudioStream");
        Result.IsAudioStreamPlaying = (rl_is_audio_stream_playing)GetProcAddress(DLLHandle, "RL_IsAudioStreamPlaying");
        Result.StopAudioStream = (rl_stop_audio_stream)GetProcAddress(DLLHandle, "RL_StopAudioStream");
        Result.SetAudioStreamVolume = (rl_set_audio_stream_volume)GetProcAddress(DLLHandle, "RL_SetAudioStreamVolume");
        Result.SetAudioStreamPitch = (rl_set_audio_stream_pitch)GetProcAddress(DLLHandle, "RL_SetAudioStreamPitch");
        Result.SetAudioStreamPan = (rl_set_audio_stream_pan)GetProcAddress(DLLHandle, "RL_SetAudioStreamPan");
        Result.SetAudioStreamBufferSizeDefault = (rl_set_audio_stream_buffer_size_default)GetProcAddress(DLLHandle, "RL_SetAudioStreamBufferSizeDefault");
        Result.SetAudioStreamCallback = (rl_set_audio_stream_callback)GetProcAddress(DLLHandle, "RL_SetAudioStreamCallback");
        Result.AttachAudioStreamProcessor = (rl_attach_audio_stream_processor)GetProcAddress(DLLHandle, "RL_AttachAudioStreamProcessor");
        Result.DetachAudioStreamProcessor = (rl_detach_audio_stream_processor)GetProcAddress(DLLHandle, "RL_DetachAudioStreamProcessor");

        ASSERT(Result.InitWindow);
        ASSERT(Result.WindowShouldClose);
        ASSERT(Result.CloseWindow);
        ASSERT(Result.IsWindowReady);
        ASSERT(Result.IsWindowFullscreen);
        ASSERT(Result.IsWindowHidden);
        ASSERT(Result.IsWindowMinimized);
        ASSERT(Result.IsWindowMaximized);
        ASSERT(Result.IsWindowFocused);
        ASSERT(Result.IsWindowResized);
        ASSERT(Result.IsWindowState);
        ASSERT(Result.SetWindowState);
        ASSERT(Result.ClearWindowState);
        ASSERT(Result.ToggleFullscreen);
        ASSERT(Result.MaximizeWindow);
        ASSERT(Result.MinimizeWindow);
        ASSERT(Result.RestoreWindow);
        ASSERT(Result.SetWindowIcon);
        ASSERT(Result.SetWindowTitle);
        ASSERT(Result.SetWindowPosition);
        ASSERT(Result.SetWindowMonitor);
        ASSERT(Result.SetWindowMinSize);
        ASSERT(Result.SetWindowSize);
        ASSERT(Result.SetWindowOpacity);
        ASSERT(Result.GetWindowHandle);
        ASSERT(Result.GetScreenWidth);
        ASSERT(Result.GetScreenHeight);
        ASSERT(Result.GetRenderWidth);
        ASSERT(Result.GetRenderHeight);
        ASSERT(Result.GetMonitorCount);
        ASSERT(Result.GetCurrentMonitor);
        ASSERT(Result.GetMonitorPosition);
        ASSERT(Result.GetMonitorWidth);
        ASSERT(Result.GetMonitorHeight);
        ASSERT(Result.GetMonitorPhysicalWidth);
        ASSERT(Result.GetMonitorPhysicalHeight);
        ASSERT(Result.GetMonitorRefreshRate);
        ASSERT(Result.GetWindowPosition);
        ASSERT(Result.GetWindowScaleDPI);
        ASSERT(Result.GetMonitorName);
        ASSERT(Result.SetClipboardText);
        ASSERT(Result.GetClipboardText);
        ASSERT(Result.EnableEventWaiting);
        ASSERT(Result.DisableEventWaiting);
        ASSERT(Result.SwapScreenBuffer);
        ASSERT(Result.PollInputEvents);
        ASSERT(Result.WaitTime);
        ASSERT(Result.ShowCursor);
        ASSERT(Result.HideCursor);
        ASSERT(Result.IsCursorHidden);
        ASSERT(Result.EnableCursor);
        ASSERT(Result.DisableCursor);
        ASSERT(Result.IsCursorOnScreen);
        ASSERT(Result.ClearBackground);
        ASSERT(Result.BeginDrawing);
        ASSERT(Result.EndDrawing);
        ASSERT(Result.BeginMode2D);
        ASSERT(Result.EndMode2D);
        ASSERT(Result.BeginMode3D);
        ASSERT(Result.EndMode3D);
        ASSERT(Result.BeginTextureMode);
        ASSERT(Result.EndTextureMode);
        ASSERT(Result.BeginShaderMode);
        ASSERT(Result.EndShaderMode);
        ASSERT(Result.BeginBlendMode);
        ASSERT(Result.EndBlendMode);
        ASSERT(Result.BeginScissorMode);
        ASSERT(Result.EndScissorMode);
        ASSERT(Result.LoadShader);
        ASSERT(Result.LoadShaderFromMemory);
        ASSERT(Result.GetShaderLocation);
        ASSERT(Result.GetShaderLocationAttrib);
        ASSERT(Result.SetShaderValue);
        ASSERT(Result.SetShaderValueV);
        ASSERT(Result.SetShaderValueMatrix);
        ASSERT(Result.SetShaderValueTexture);
        ASSERT(Result.UnloadShader);
        ASSERT(Result.GetMouseRay);
        ASSERT(Result.GetCameraMatrix);
        ASSERT(Result.GetCameraMatrix2D);
        ASSERT(Result.GetWorldToScreen);
        ASSERT(Result.GetScreenToWorld2D);
        ASSERT(Result.GetWorldToScreenEx);
        ASSERT(Result.GetWorldToScreen2D);
        ASSERT(Result.SetTargetFPS);
        ASSERT(Result.GetFPS);
        ASSERT(Result.GetFrameTime);
        ASSERT(Result.GetTime);
        ASSERT(Result.GetRandomValue);
        ASSERT(Result.SetRandomSeed);
        ASSERT(Result.TakeScreenshot);
        ASSERT(Result.SetConfigFlags);
        ASSERT(Result.SetTraceLogLevel);
        ASSERT(Result.MemAlloc);
        ASSERT(Result.MemRealloc);
        ASSERT(Result.MemFree);
        ASSERT(Result.OpenURL);
        ASSERT(Result.SetTraceLogCallback);
        ASSERT(Result.LoadFileData);
        ASSERT(Result.UnloadFileData);
        ASSERT(Result.SaveFileData);
        ASSERT(Result.ExportDataAsCode);
        ASSERT(Result.LoadFileText);
        ASSERT(Result.UnloadFileText);
        ASSERT(Result.SaveFileText);
        ASSERT(Result.FileExists);
        ASSERT(Result.DirectoryExists);
        ASSERT(Result.IsFileExtension);
        ASSERT(Result.GetFileLength);
        ASSERT(Result.GetFileExtension);
        ASSERT(Result.GetFileName);
        ASSERT(Result.GetFileNameWithoutExt);
        ASSERT(Result.GetDirectoryPath);
        ASSERT(Result.GetPrevDirectoryPath);
        ASSERT(Result.GetWorkingDirectory);
        ASSERT(Result.GetApplicationDirectory);
        ASSERT(Result.ChangeDirectory);
        ASSERT(Result.IsPathFile);
        ASSERT(Result.LoadDirectoryFiles);
        ASSERT(Result.LoadDirectoryFilesEx);
        ASSERT(Result.UnloadDirectoryFiles);
        ASSERT(Result.IsFileDropped);
        ASSERT(Result.LoadDroppedFiles);
        ASSERT(Result.UnloadDroppedFiles);
        ASSERT(Result.GetFileModTime);
        ASSERT(Result.CompressData);
        ASSERT(Result.DecompressData);
        ASSERT(Result.EncodeDataBase64);
        ASSERT(Result.DecodeDataBase64);
        ASSERT(Result.IsKeyPressed);
        ASSERT(Result.IsKeyDown);
        ASSERT(Result.IsKeyReleased);
        ASSERT(Result.IsKeyUp);
        ASSERT(Result.SetExitKey);
        ASSERT(Result.GetKeyPressed);
        ASSERT(Result.GetCharPressed);
        ASSERT(Result.IsGamepadAvailable);
        ASSERT(Result.GetGamepadName);
        ASSERT(Result.IsGamepadButtonPressed);
        ASSERT(Result.IsGamepadButtonDown);
        ASSERT(Result.IsGamepadButtonReleased);
        ASSERT(Result.IsGamepadButtonUp);
        ASSERT(Result.GetGamepadButtonPressed);
        ASSERT(Result.GetGamepadAxisCount);
        ASSERT(Result.GetGamepadAxisMovement);
        ASSERT(Result.SetGamepadMappings);
        ASSERT(Result.IsMouseButtonPressed);
        ASSERT(Result.IsMouseButtonDown);
        ASSERT(Result.IsMouseButtonReleased);
        ASSERT(Result.IsMouseButtonUp);
        ASSERT(Result.GetMouseX);
        ASSERT(Result.GetMouseY);
        ASSERT(Result.GetMousePosition);
        ASSERT(Result.GetMouseDelta);
        ASSERT(Result.SetMousePosition);
        ASSERT(Result.SetMouseOffset);
        ASSERT(Result.SetMouseScale);
        ASSERT(Result.GetMouseWheelMove);
        ASSERT(Result.GetMouseWheelMoveV);
        ASSERT(Result.SetMouseCursor);
        ASSERT(Result.GetTouchX);
        ASSERT(Result.GetTouchY);
        ASSERT(Result.GetTouchPosition);
        ASSERT(Result.GetTouchPointId);
        ASSERT(Result.GetTouchPointCount);
        ASSERT(Result.SetGesturesEnabled);
        ASSERT(Result.IsGestureDetected);
        ASSERT(Result.GetGestureDetected);
        ASSERT(Result.GetGestureHoldDuration);
        ASSERT(Result.GetGestureDragVector);
        ASSERT(Result.GetGestureDragAngle);
        ASSERT(Result.GetGesturePinchVector);
        ASSERT(Result.GetGesturePinchAngle);
        ASSERT(Result.SetCameraMode);
        ASSERT(Result.UpdateCamera);
        ASSERT(Result.SetCameraPanControl);
        ASSERT(Result.SetCameraAltControl);
        ASSERT(Result.SetCameraSmoothZoomControl);
        ASSERT(Result.SetCameraMoveControls);
        ASSERT(Result.SetShapesTexture);
        ASSERT(Result.DrawPixel);
        ASSERT(Result.DrawPixelV);
        ASSERT(Result.DrawLine);
        ASSERT(Result.DrawLineV);
        ASSERT(Result.DrawLineEx);
        ASSERT(Result.DrawLineBezier);
        ASSERT(Result.DrawLineBezierQuad);
        ASSERT(Result.DrawLineBezierCubic);
        ASSERT(Result.DrawLineStrip);
        ASSERT(Result.DrawCircle);
        ASSERT(Result.DrawCircleSector);
        ASSERT(Result.DrawCircleSectorLines);
        ASSERT(Result.DrawCircleGradient);
        ASSERT(Result.DrawCircleV);
        ASSERT(Result.DrawCircleLines);
        ASSERT(Result.DrawEllipse);
        ASSERT(Result.DrawEllipseLines);
        ASSERT(Result.DrawRing);
        ASSERT(Result.DrawRingLines);
        ASSERT(Result.DrawRectangle);
        ASSERT(Result.DrawRectangleV);
        ASSERT(Result.DrawRectangleRec);
        ASSERT(Result.DrawRectanglePro);
        ASSERT(Result.DrawRectangleGradientV);
        ASSERT(Result.DrawRectangleGradientH);
        ASSERT(Result.DrawRectangleGradientEx);
        ASSERT(Result.DrawRectangleLines);
        ASSERT(Result.DrawRectangleLinesEx);
        ASSERT(Result.DrawRectangleRounded);
        ASSERT(Result.DrawRectangleRoundedLines);
        ASSERT(Result.DrawRectangleRoundedLines);
        ASSERT(Result.DrawTriangle);
        ASSERT(Result.DrawTriangleLines);
        ASSERT(Result.DrawTriangleLinesRotated);
        ASSERT(Result.DrawTriangleFan);
        ASSERT(Result.DrawTriangleStrip);
        ASSERT(Result.DrawPolygon);
        ASSERT(Result.DrawPoly);
        ASSERT(Result.DrawPolyLines);
        ASSERT(Result.DrawPolyLinesEx);
        ASSERT(Result.CheckCollisionRecs);
        ASSERT(Result.CheckCollisionCircles);
        ASSERT(Result.CheckCollisionCircleRec);
        ASSERT(Result.CheckCollisionPointRec);
        ASSERT(Result.CheckCollisionPointCircle);
        ASSERT(Result.CheckCollisionPointTriangle);
        ASSERT(Result.CheckCollisionLines);
        ASSERT(Result.CheckCollisionPointLine);
        ASSERT(Result.GetCollisionRec);
        ASSERT(Result.RL_LoadImage);
        ASSERT(Result.LoadImageRaw);
        ASSERT(Result.LoadImageAnim);
        ASSERT(Result.LoadImageFromMemory);
        ASSERT(Result.LoadImageFromTexture);
        ASSERT(Result.LoadImageFromScreen);
        ASSERT(Result.UnloadImage);
        ASSERT(Result.ExportImage);
        ASSERT(Result.ExportImageAsCode);
        ASSERT(Result.GenImageColor);
        ASSERT(Result.GenImageGradientV);
        ASSERT(Result.GenImageGradientH);
        ASSERT(Result.GenImageGradientRadial);
        ASSERT(Result.GenImageChecked);
        ASSERT(Result.GenImageWhiteNoise);
        ASSERT(Result.GenImageCellular);
        ASSERT(Result.ImageCopy);
        ASSERT(Result.ImageFromImage);
        ASSERT(Result.ImageText);
        ASSERT(Result.ImageTextEx);
        ASSERT(Result.ImageFormat);
        ASSERT(Result.ImageToPOT);
        ASSERT(Result.ImageCrop);
        ASSERT(Result.ImageAlphaCrop);
        ASSERT(Result.ImageAlphaClear);
        ASSERT(Result.ImageAlphaMask);
        ASSERT(Result.ImageAlphaPremultiply);
        ASSERT(Result.ImageResize);
        ASSERT(Result.ImageResizeNN);
        ASSERT(Result.ImageResizeCanvas);
        ASSERT(Result.ImageMipmaps);
        ASSERT(Result.ImageDither);
        ASSERT(Result.ImageFlipVertical);
        ASSERT(Result.ImageFlipHorizontal);
        ASSERT(Result.ImageRotateCW);
        ASSERT(Result.ImageRotateCCW);
        ASSERT(Result.ImageColorTint);
        ASSERT(Result.ImageColorInvert);
        ASSERT(Result.ImageColorGrayscale);
        ASSERT(Result.ImageColorContrast);
        ASSERT(Result.ImageColorBrightness);
        ASSERT(Result.ImageColorReplace);
        ASSERT(Result.LoadImageColors);
        ASSERT(Result.LoadImagePalette);
        ASSERT(Result.UnloadImageColors);
        ASSERT(Result.UnloadImagePalette);
        ASSERT(Result.GetImageAlphaBorder);
        ASSERT(Result.GetImageColor);
        ASSERT(Result.ImageClearBackground);
        ASSERT(Result.ImageDrawPixel);
        ASSERT(Result.ImageDrawPixelV);
        ASSERT(Result.ImageDrawLine);
        ASSERT(Result.ImageDrawLineV);
        ASSERT(Result.ImageDrawCircle);
        ASSERT(Result.ImageDrawCircleV);
        ASSERT(Result.ImageDrawRectangle);
        ASSERT(Result.ImageDrawRectangleV);
        ASSERT(Result.ImageDrawRectangleRec);
        ASSERT(Result.ImageDrawRectangleLines);
        ASSERT(Result.ImageDraw);
        ASSERT(Result.ImageDrawText);
        ASSERT(Result.ImageDrawTextEx);
        ASSERT(Result.LoadTexture);
        ASSERT(Result.LoadTextureFromImage);
        ASSERT(Result.LoadTextureCubemap);
        ASSERT(Result.LoadRenderTexture);
        ASSERT(Result.UnloadTexture);
        ASSERT(Result.UnloadRenderTexture);
        ASSERT(Result.UpdateTexture);
        ASSERT(Result.UpdateTextureRec);
        ASSERT(Result.GenTextureMipmaps);
        ASSERT(Result.SetTextureFilter);
        ASSERT(Result.SetTextureWrap);
        ASSERT(Result.DrawRenderTexture);
        ASSERT(Result.DrawTexture);
        ASSERT(Result.DrawTextureV);
        ASSERT(Result.DrawTextureEx);
        ASSERT(Result.DrawTextureRotatedScaled);
        ASSERT(Result.DrawTextureRec);
        ASSERT(Result.DrawTextureQuad);
        ASSERT(Result.DrawTextureTiled);
        ASSERT(Result.DrawTexturePro);
        ASSERT(Result.DrawTextureNPatch);
        ASSERT(Result.DrawTexturePoly);
        ASSERT(Result.Fade);
        ASSERT(Result.ColorToInt);
        ASSERT(Result.ColorNormalize);
        ASSERT(Result.ColorFromNormalized);
        ASSERT(Result.ColorToHSV);
        ASSERT(Result.ColorFromHSV);
        ASSERT(Result.ColorAlpha);
        ASSERT(Result.ColorAlphaBlend);
        ASSERT(Result.GetColor);
        ASSERT(Result.GetPixelColor);
        ASSERT(Result.SetPixelColor);
        ASSERT(Result.GetPixelDataSize);
        ASSERT(Result.GetFontDefault);
        ASSERT(Result.LoadFont);
        ASSERT(Result.LoadFontEx);
        ASSERT(Result.LoadFontFromImage);
        ASSERT(Result.LoadFontFromMemory);
        ASSERT(Result.LoadFontData);
        ASSERT(Result.GenImageFontAtlas);
        ASSERT(Result.UnloadFontData);
        ASSERT(Result.UnloadFont);
        ASSERT(Result.ExportFontAsCode);
        ASSERT(Result.DrawFPS);
        ASSERT(Result.RL_DrawText);
        ASSERT(Result.RL_DrawTextEx);
        ASSERT(Result.DrawTextPro);
        ASSERT(Result.DrawTextCodepoint);
        ASSERT(Result.DrawTextCodepoints);
        ASSERT(Result.MeasureText);
        ASSERT(Result.MeasureTextEx);
        ASSERT(Result.GetGlyphIndex);
        ASSERT(Result.GetGlyphInfo);
        ASSERT(Result.GetGlyphAtlasRec);
        ASSERT(Result.LoadCodepoints);
        ASSERT(Result.UnloadCodepoints);
        ASSERT(Result.GetCodepointCount);
        ASSERT(Result.GetCodepoint);
        ASSERT(Result.CodepointToUTF8);
        ASSERT(Result.TextCodepointsToUTF8);
        ASSERT(Result.TextCopy);
        ASSERT(Result.TextIsEqual);
        ASSERT(Result.TextLength);
        ASSERT(Result.TextSubtext);
        ASSERT(Result.TextReplace);
        ASSERT(Result.TextInsert);
        ASSERT(Result.TextJoin);
        ASSERT(Result.TextSplit);
        ASSERT(Result.TextAppend);
        ASSERT(Result.TextFindIndex);
        ASSERT(Result.TextToUpper);
        ASSERT(Result.TextToLower);
        ASSERT(Result.TextToPascal);
        ASSERT(Result.TextToInteger);
        ASSERT(Result.DrawLine3D);
        ASSERT(Result.DrawPoint3D);
        ASSERT(Result.DrawCircle3D);
        ASSERT(Result.DrawTriangle3D);
        ASSERT(Result.DrawTriangleStrip3D);
        ASSERT(Result.DrawCube);
        ASSERT(Result.DrawCubeV);
        ASSERT(Result.DrawCubeWires);
        ASSERT(Result.DrawCubeWiresV);
        ASSERT(Result.DrawCubeTexture);
        ASSERT(Result.DrawCubeTextureRec);
        ASSERT(Result.DrawSphere);
        ASSERT(Result.DrawSphereEx);
        ASSERT(Result.DrawSphereWires);
        ASSERT(Result.DrawCylinder);
        ASSERT(Result.DrawCylinderEx);
        ASSERT(Result.DrawCylinderWires);
        ASSERT(Result.DrawCylinderWiresEx);
        ASSERT(Result.DrawPlane);
        ASSERT(Result.DrawRay);
        ASSERT(Result.DrawGrid);
        ASSERT(Result.LoadModel);
        ASSERT(Result.LoadModelFromMesh);
        ASSERT(Result.UnloadModel);
        ASSERT(Result.UnloadModelKeepMeshes);
        ASSERT(Result.GetModelBoundingBox);
        ASSERT(Result.DrawModel);
        ASSERT(Result.DrawModelEx);
        ASSERT(Result.DrawModelWires);
        ASSERT(Result.DrawModelWiresEx);
        ASSERT(Result.DrawBoundingBox);
        ASSERT(Result.DrawBillboard);
        ASSERT(Result.DrawBillboardRec);
        ASSERT(Result.DrawBillboardPro);
        ASSERT(Result.UploadMesh);
        ASSERT(Result.UpdateMeshBuffer);
        ASSERT(Result.UnloadMesh);
        ASSERT(Result.DrawMesh);
        ASSERT(Result.DrawMeshInstanced);
        ASSERT(Result.ExportMesh);
        ASSERT(Result.GetMeshBoundingBox);
        ASSERT(Result.GenMeshTangents);
        ASSERT(Result.GenMeshPoly);
        ASSERT(Result.GenMeshPlane);
        ASSERT(Result.GenMeshCube);
        ASSERT(Result.GenMeshSphere);
        ASSERT(Result.GenMeshHemiSphere);
        ASSERT(Result.GenMeshCylinder);
        ASSERT(Result.GenMeshCone);
        ASSERT(Result.GenMeshTorus);
        ASSERT(Result.GenMeshKnot);
        ASSERT(Result.GenMeshHeightmap);
        ASSERT(Result.GenMeshCubicmap);
        ASSERT(Result.LoadMaterials);
        ASSERT(Result.LoadMaterialDefault);
        ASSERT(Result.UnloadMaterial);
        ASSERT(Result.SetMaterialTexture);
        ASSERT(Result.SetModelMeshMaterial);
        ASSERT(Result.LoadModelAnimations);
        ASSERT(Result.UpdateModelAnimation);
        ASSERT(Result.UnloadModelAnimation);
        ASSERT(Result.UnloadModelAnimations);
        ASSERT(Result.IsModelAnimationValid);
        ASSERT(Result.CheckCollisionSpheres);
        ASSERT(Result.CheckCollisionBoxes);
        ASSERT(Result.CheckCollisionBoxSphere);
        ASSERT(Result.GetRayCollisionSphere);
        ASSERT(Result.GetRayCollisionBox);
        ASSERT(Result.GetRayCollisionMesh);
        ASSERT(Result.GetRayCollisionTriangle);
        ASSERT(Result.GetRayCollisionQuad);
        ASSERT(Result.InitAudioDevice);
        ASSERT(Result.CloseAudioDevice);
        ASSERT(Result.IsAudioDeviceReady);
        ASSERT(Result.SetMasterVolume);
        ASSERT(Result.LoadWave);
        ASSERT(Result.LoadWaveFromMemory);
        ASSERT(Result.LoadSound);
        ASSERT(Result.LoadSoundFromWave);
        ASSERT(Result.UpdateSound);
        ASSERT(Result.UnloadWave);
        ASSERT(Result.UnloadSound);
        ASSERT(Result.ExportWave);
        ASSERT(Result.ExportWaveAsCode);
        ASSERT(Result.RL_PlaySound);
        ASSERT(Result.StopSound);
        ASSERT(Result.PauseSound);
        ASSERT(Result.ResumeSound);
        ASSERT(Result.PlaySoundMulti);
        ASSERT(Result.StopSoundMulti);
        ASSERT(Result.GetSoundsPlaying);
        ASSERT(Result.IsSoundPlaying);
        ASSERT(Result.SetSoundVolume);
        ASSERT(Result.SetSoundPitch);
        ASSERT(Result.SetSoundPan);
        ASSERT(Result.WaveCopy);
        ASSERT(Result.WaveCrop);
        ASSERT(Result.WaveFormat);
        ASSERT(Result.LoadWaveSamples);
        ASSERT(Result.UnloadWaveSamples);
        ASSERT(Result.LoadMusicStream);
        ASSERT(Result.LoadMusicStreamFromMemory);
        ASSERT(Result.UnloadMusicStream);
        ASSERT(Result.PlayMusicStream);
        ASSERT(Result.IsMusicStreamPlaying);
        ASSERT(Result.UpdateMusicStream);
        ASSERT(Result.StopMusicStream);
        ASSERT(Result.PauseMusicStream);
        ASSERT(Result.ResumeMusicStream);
        ASSERT(Result.SeekMusicStream);
        ASSERT(Result.SetMusicVolume);
        ASSERT(Result.SetMusicPitch);
        ASSERT(Result.SetMusicPan);
        ASSERT(Result.GetMusicTimeLength);
        ASSERT(Result.GetMusicTimePlayed);
        ASSERT(Result.LoadAudioStream);
        ASSERT(Result.UnloadAudioStream);
        ASSERT(Result.UpdateAudioStream);
        ASSERT(Result.IsAudioStreamProcessed);
        ASSERT(Result.PlayAudioStream);
        ASSERT(Result.PauseAudioStream);
        ASSERT(Result.ResumeAudioStream);
        ASSERT(Result.IsAudioStreamPlaying);
        ASSERT(Result.StopAudioStream);
        ASSERT(Result.SetAudioStreamVolume);
        ASSERT(Result.SetAudioStreamPitch);
        ASSERT(Result.SetAudioStreamPan);
        ASSERT(Result.SetAudioStreamBufferSizeDefault);
        ASSERT(Result.SetAudioStreamCallback);
        ASSERT(Result.AttachAudioStreamProcessor);
        ASSERT(Result.DetachAudioStreamProcessor);
    }

    return (Result);
}
#endif
